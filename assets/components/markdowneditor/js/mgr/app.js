Ext.ns("MarkdownEditor"),MarkdownEditor=function(e){e=e||{},MarkdownEditor.superclass.constructor.call(this,e)},Ext.extend(MarkdownEditor,Ext.Component,{window:{},config:{}}),Ext.reg("markdowneditor",MarkdownEditor),markdownEditor=new MarkdownEditor,markdownEditor.Editor=function(e){e=e||{},e.resource=MODx.request.id||0,markdownEditor.Editor.superclass.constructor.call(this,e),this.config=e},Ext.extend(markdownEditor.Editor,Ext.Component,{remarkable:"",fullScreen:!1,initComponent:function(){MarkdownEditor.superclass.initComponent.call(this),Ext.onReady(this.render,this)},render:function(){if(this.textarea=Ext.get("ta"),this.textarea){this.buildUI(),this.registerAce(),this.registerMarked(),this.buildToolbox();var e=this.toolBox.child(".preview-button"),t=this.toolBox.child(".fullscreen-button"),i=this.toolBox.child(".splitscreen-button"),o=this.contentMD,r=o.parent(),s=Ext.get(Ext.DomHelper.append(r,{tag:"div","class":"preview-button-off",html:'<i class="icon icon-eye-slash icon-large"></i>',hidden:!0})),a=MODx.load({xtype:"modx-treedrop",target:o,targetEl:o,onInsert:function(e){return this.insert(e),this.focus(),!0}.bind(this.editor),iframe:!0});this.textarea.on("destroy",function(){a.destroy()}),e.addListener("click",function(){this.preview.setDisplayed("block"),o.setDisplayed("none"),this.statusBar.setDisplayed("none"),s.show()},this),s.addListener("click",function(){this.preview.setDisplayed("none"),o.setDisplayed("block"),this.statusBar.setDisplayed("block"),this.editor.focus(),s.hide()},this),i.addListener("click",function(){i.child("i").hasClass("icon-pause")?i.turnOn():i.turnOff()},this),t.addListener("click",function(){0==this.fullScreen?(this.fullScreen=!0,t.turnOn(),i.turnOn(),this.preview.setDisplayed("block"),o.setDisplayed("block"),this.editor.focus(),r.addClass("fullscreen"),this.editor.setOption("maxLines",null)):(this.fullScreen=!1,t.turnOff(),this.preview.setDisplayed("none"),o.setDisplayed("block"),this.editor.focus(),r.removeClass("fullscreen"),this.editor.setOption("maxLines",1/0)),this.statusBar.setDisplayed("block"),this.editor.resize(!0)},this),markdownEditor.content.content&&this.editor.setValue(markdownEditor.content.content),this.editor.selection.clearSelection(),this.preview.update(this.parse(this.editor.getValue())),this.editor.getSession().on("change",function(){this.parse(this.editor.getValue())}.bind(this))}},buildUI:function(){this.textarea.setDisplayed("none"),this.textarea.setWidth(0),this.textarea.setHeight(0),this.taMarkdown=Ext.get(Ext.DomHelper.insertBefore(this.textarea,{tag:"textarea",name:"ta_markdown","class":"ta_markdown"})),this.taMarkdown.setDisplayed("none"),this.taMarkdown.setWidth(0),this.taMarkdown.setHeight(0);var e=Ext.DomHelper.insertBefore(this.textarea,{tag:"div","class":"markdown-container"});this.contentMD=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":this.textarea.dom.className+" content-md"})),this.preview=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"markdown-body preview-md"})),1==MODx.config["markdowneditor.upload.enable_image_upload"]||1==MODx.config["markdowneditor.upload.enable_file_upload"]?(this.statusBar=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"status-bar"})),this.isMobileDevice()?(this.statusBar.dom.innerHTML='<div class="upload-bar"> <input class="hidden" name="file" id="'+this.statusBar.id+'-file" type="file" multiple /><input class="hidden" name="file-mobile" id="'+this.statusBar.id+'-file-mobile" type="file" accept="image/*" capture="camera" />'+_("markdowneditor.status_bar_message_mobile",{id:this.statusBar.id+"-file",id_mobile:this.statusBar.id+"-file-mobile"})+"</div>",this.statusBar.child("#"+this.statusBar.id+"-file-mobile").on("change",function(e,t){this.handleFiles(t.files,1),t.value=""},this)):(this.statusBar.dom.innerHTML='<div class="upload-bar"> <input class="hidden" name="file" id="'+this.statusBar.id+'-file" type="file" multiple>'+_("markdowneditor.status_bar_message",{id:this.statusBar.id+"-file"})+"</div>",this.statusBar.child("#"+this.statusBar.id+"-file").on("change",function(e,t){this.handleFiles(t.files),t.value=""},this))):this.statusBar=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"status-bar",html:_("markdowneditor.status_bar_disabled")})),Ext.DomHelper.append(e,{tag:"span",style:"clear: both"})},buildToolbox:function(){this.toolBox=Ext.get(Ext.DomHelper.append(this.contentMD,{tag:"div","class":"toolbox",cn:[{tag:"div","class":"preview-button",html:'<i class="icon icon-eye icon-large"></i>'},{tag:"div","class":"splitscreen-button",html:'<i class="icon icon-pause icon-large"></i>'},{tag:"div","class":"fullscreen-button",html:'<i class="icon icon-expand icon-large"></i>'}]})),this.toolBox.child(".splitscreen-button").turnOn=function(){this.child("i").removeClass("icon-pause"),this.child("i").addClass("icon-stop")},this.toolBox.child(".splitscreen-button").turnOff=function(){this.child("i").addClass("icon-pause"),this.child("i").removeClass("icon-stop")},this.toolBox.child(".fullscreen-button").turnOn=function(){this.child("i").removeClass("icon-expand"),this.child("i").addClass("icon-compress")},this.toolBox.child(".fullscreen-button").turnOff=function(){this.child("i").addClass("icon-expand"),this.child("i").removeClass("icon-compress")}},registerAce:function(){this.editor=ace.edit(Ext.DomQuery.selectNode("div.content-md")),this.editor.setOptions({maxLines:1/0,minLines:25,enableBasicAutocompletion:!0,printMargin:!1,showGutter:1==parseInt(MODx.config["markdowneditor.general.show_gutter"]||1),fontSize:parseInt(MODx.config["markdowneditor.general.font_size"])||12,fontFamily:MODx.config["markdowneditor.general.font_family"]||""}),this.editor.getSession().setUseWrapMode(!0),this.editor.getSession().setWrapLimitRange(),this.editor.renderer.setScrollMargin(10,10),this.editor.getSession().setValue(this.textarea.getValue()),this.editor.getSession().setMode("ace/mode/markdown"),this.editor.setTheme("ace/theme/"+(MODx.config["markdowneditor.general.theme"]||"monokai"));var e=ace.require("ace/ext/language_tools"),t={getCompletions:function(e,t,i,o,r){return 0===o.length?(r(null,[]),void 0):(MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/resource/getlist",prefix:o},listeners:{success:{fn:function(e){r(null,e.results)},scope:this}}}),void 0)}};e.addCompleter(t),this.editor.container.addEventListener("dragenter",this.catchAndDoNothing,!1),this.editor.container.addEventListener("dragover",this.catchAndDoNothing,!1),this.editor.container.addEventListener("drop",this.drop.bind(this),!1)},registerMarked:function(){this.remarkable=new Remarkable({html:!0,highlight:function(e,t){var i="";if(t&&hljs.getLanguage(t))try{return i=hljs.highlight(t,e).value,i=i.replace(/\[\[/g,"&#91;&#91;"),i=i.replace(/]]/g,"&#93;&#93;")}catch(o){}try{return i=hljs.highlightAuto(e).value,i=i.replace(/\[\[/g,"&#91;&#91;"),i=i.replace(/]]/g,"&#93;&#93;")}catch(o){}return""}}),this.remarkable.inline.ruler.disable(["backticks"])},parse:function(e){var t=this.remarkable.render(e);if(t=t.replace(/%5B/g,"["),t=t.replace(/%5D/g,"]"),1==MODx.config["markdowneditor.lp.parse_modx_tags"]){this.parseRequest&&clearTimeout(this.parseRequest);var i=parseInt(MODx.config["markdowneditor.lp.parse_modx_tags_timeout"]||300);this.parseRequest=setTimeout(function(){MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/editor/processcontent",content:t,resource:MODx.request.id},isUpload:!0,listeners:{success:{fn:function(e){this.preview.update(e.data),1==this.fullScreen&&this.editor.getCursorPosition().row+2>=this.editor.getSession().getScreenLength()&&(this.preview.dom.scrollTop=this.preview.dom.scrollHeight)},scope:this}}})}.bind(this),i)}else this.preview.update(t),1==this.fullScreen&&this.editor.getCursorPosition().row+2>=this.editor.getSession().getScreenLength()&&(this.preview.dom.scrollTop=this.preview.dom.scrollHeight);return this.taMarkdown.dom.value=this.editor.getValue(),this.textarea.dom.value=t,t},catchAndDoNothing:function(e){e.stopPropagation(),e.preventDefault()},drop:function(e){e.stopPropagation(),e.preventDefault(),(1==MODx.config["markdowneditor.upload.enable_image_upload"]||1==MODx.config["markdowneditor.upload.enable_file_upload"])&&this.handleFiles(e.dataTransfer.files)},handleFiles:function(e,t){t=t||0,Ext.each(e,function(e){var i=/^image\//.test(e.type);if(i){if(0==MODx.config["markdowneditor.upload.enable_image_upload"])return!0;if(!this.checkType(MODx.config["markdowneditor.upload.image_types"],e))return this.failMessage(e,"image",_("markdowneditor.err.upload.unsupported_image")),!0;if(e.size>parseInt(MODx.config["markdowneditor.upload.max_size"]))return this.failMessage(e,"image",_("markdowneditor.err.upload.too_big")),!0;1==MODx.config["markdowneditor.cropper.enable_cropper"]?MODx.load({xtype:"markdowneditor-window-cropper",file:e,md:this,mobile:t}).show():(this.uploadFile(e,"image",t),this.editor.focus())}else{if(0==MODx.config["markdowneditor.upload.enable_file_upload"])return!0;if(!this.checkType(MODx.config["markdowneditor.upload.file_types"],e))return this.failMessage(e,"file",_("markdowneditor.err.upload.unsupported_file")),!0;if(e.size>parseInt(MODx.config["markdowneditor.upload.max_size"]))return this.failMessage(e,"file",_("markdowneditor.err.upload.too_big")),!0;this.uploadFile(e,"file"),this.editor.focus()}},this)},checkType:function(e,t){return e=e.split(","),-1!=e.indexOf(t.name.split(".").pop())},uploadFile:function(e,t,i){t=t||"file",i=i||0;var o=this.createUploader(),r=new FormData;r.append("file",e),r.append("action","mgr/editor/"+t+"upload"),r.append("name",e.name),r.append("resource",this.config.resource),r.append("mobile",i);var s=new XMLHttpRequest;s.open("POST",markdownEditor.config.connectorUrl),s.setRequestHeader("Powered-By","MODx"),s.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),s.upload.onprogress=function(e){if(e.lengthComputable){var t=e.loaded/e.total*100|0;o.child(".progress").setWidth(t+"%")}}.bind(this),s.onload=function(){if(200===s.status){var e=JSON.parse(s.responseText);if(1==e.success){o.remove();var i="image"==t?"!":"",r="image"==t?"\n\n":"\n";this.editor.insert(i+"["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")'+r)}else this.failUploader(o,e.message)}}.bind(this),s.send(r)},createUploader:function(e,t){var i=Ext.DomHelper.insertFirst(this.statusBar,{tag:"div",html:'<div class="progress"><i class="icon icon-spinner icon-spin"></i> <span>'+_("markdowneditor.uploading_"+e)+t+"</span></div>"});return Ext.get(i)},failUploader:function(e,t){e.child(".progress").addClass("error"),e.child(".progress").setWidth("100%"),e.child("i").addClass("remove-message"),e.child("i").replaceClass("icon-spinner","icon-remove"),e.child("i").removeClass("icon-spin"),e.child("span").dom.innerHTML+=" failed. "+t,e.child(".remove-message").on("click",function(){e.remove()})},failMessage:function(e,t,i){var o=this.createUploader(t,e.name);this.failUploader(o,i)},isMobileDevice:function(){return"undefined"!=typeof window.orientation||-1!==navigator.userAgent.indexOf("IEMobile")}}),MODx.loadRTE=function(){new markdownEditor.Editor},markdownEditor.window.Cropper=function(config){config=config||{},config.cropperSelector=config.cropperSelector||".image-upload-wrapper > img",Ext.applyIf(config,{modal:!1,layout:"auto",closeAction:"hide",shadow:!0,resizable:!0,collapsible:!0,maximizable:!1,autoHeight:!1,autoScroll:!0,allowDrop:!0,width:800,mobile:0,title:_("markdowneditor.cropper.crop_image"),cls:"modx-window",html:'<div class="image-upload-wrapper"><img src="'+URL.createObjectURL(config.file)+'"></div>',tbar:[{text:'<i class="icon icon-arrows"></i> '+_("markdowneditor.cropper.move"),scope:this,param:"move",action:"setDragMode",handler:this.callCropperAction},{text:'<i class="icon icon-crop"></i> '+_("markdowneditor.cropper.crop"),scope:this,param:"crop",action:"setDragMode",handler:this.callCropperAction},{text:'<i class="icon icon-search-plus"></i> '+_("markdowneditor.cropper.zoom_in"),scope:this,param:.1,action:"zoom",handler:this.callCropperAction},{text:'<i class="icon icon-search-minus"></i> '+_("markdowneditor.cropper.zoom_out"),scope:this,param:-.1,action:"zoom",handler:this.callCropperAction},{text:'<i class="icon icon-rotate-left"></i> '+_("markdowneditor.cropper.rotate_left"),scope:this,param:-90,action:"rotate",handler:this.callCropperAction},{text:'<i class="icon icon-rotate-right"></i> '+_("markdowneditor.cropper.rotate_right"),scope:this,param:90,action:"rotate",handler:this.callCropperAction},{text:'<i class="icon icon-remove"></i> '+_("markdowneditor.cropper.clear_cropper"),scope:this,param:null,action:"clear",handler:this.callCropperAction}],buttons:[{text:_("cancel"),scope:this,handler:this.close},{text:_("markdowneditor.cropper.upload"),cls:"primary-button",scope:this,crop:0,handler:this.upload},{text:_("markdowneditor.cropper.crop_upload"),cls:"primary-button",scope:this,crop:1,handler:this.upload}],listeners:{show:{fn:function(){var cropperOptions={};this.$cropperEl=$("#"+this.id+" "+config.cropperSelector);var ratio=MODx.config["markdowneditor.cropper.aspect_ratio"];ratio&&(ratio.replace(/[^-:x()\d/*+.]/g,""),ratio=eval(ratio),cropperOptions.aspectRatio=ratio),cropperOptions.crop=function(e){this.imageData=['{"x":'+e.x,'"y":'+e.y,'"height":'+e.height,'"width":'+e.width,'"rotate":'+e.rotate+"}"].join()}.bind(this),this.$cropperEl.cropper(cropperOptions)},scope:this}}}),markdownEditor.window.Cropper.superclass.constructor.call(this,config),this.config=config},Ext.extend(markdownEditor.window.Cropper,Ext.Window,{imageData:"",upload:function(e){var t=this.config.md.createUploader("image",this.config.file.name),i=new FormData;i.append("file",this.config.file),i.append("action","mgr/editor/imageupload"),i.append("imageData",this.imageData),i.append("name",this.config.file.name),i.append("crop",e.crop),i.append("resource",this.config.md.config.resource),i.append("mobile",this.config.mobile);var o=new XMLHttpRequest;o.open("POST",markdownEditor.config.connectorUrl),o.setRequestHeader("Powered-By","MODx"),o.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),o.upload.onprogress=function(e){if(e.lengthComputable){var i=e.loaded/e.total*100|0;t.child(".progress").setWidth(i+"%")}}.bind(this),o.onload=function(){if(200===o.status){var e=JSON.parse(o.responseText);1==e.success?(t.remove(),this.config.md.editor.insert("!["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")\n\n')):this.config.md.failUploader(t,e.message)}}.bind(this),o.send(i),this.close()},callCropperAction:function(e){this.$cropperEl.cropper(e.action,e.param)},close:function(){this.$cropperEl.cropper("destroy"),markdownEditor.window.Cropper.superclass.close.call(this),this.config.md.editor.focus()}}),Ext.reg("markdowneditor-window-cropper",markdownEditor.window.Cropper);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsIm1hcmtkb3duZWRpdG9yLndpbmRvdy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFBLEdBQUEsa0JBQ0EsZUFBQSxTQUFBLEdBQ0EsRUFBQSxNQUNBLGVBQUEsV0FBQSxZQUFBLEtBQUEsS0FBQSxJQUVBLElBQUEsT0FBQSxlQUFBLElBQUEsV0FDQSxVQUFBLFlBRUEsSUFBQSxJQUFBLGlCQUFBLGdCQUNBLGVBQUEsR0FBQSxnQkFFQSxlQUFBLE9BQUEsU0FBQSxHQUNBLEVBQUEsTUFDQSxFQUFBLFNBQUEsS0FBQSxRQUFBLElBQUEsRUFDQSxlQUFBLE9BQUEsV0FBQSxZQUFBLEtBQUEsS0FBQSxHQUNBLEtBQUEsT0FBQSxHQUVBLElBQUEsT0FBQSxlQUFBLE9BQUEsSUFBQSxXQUNBLFdBQUEsR0FDQSxZQUFBLEVBQ0EsY0FBQSxXQUNBLGVBQUEsV0FBQSxjQUFBLEtBQUEsTUFFQSxJQUFBLFFBQUEsS0FBQSxPQUFBLE9BR0EsT0FBQSxXQUVBLEdBREEsS0FBQSxTQUFBLElBQUEsSUFBQSxNQUNBLEtBQUEsU0FBQSxDQUVBLEtBQUEsVUFDQSxLQUFBLGNBQ0EsS0FBQSxpQkFDQSxLQUFBLGNBRUEsSUFBQSxHQUFBLEtBQUEsUUFBQSxNQUFBLG1CQUNBLEVBQUEsS0FBQSxRQUFBLE1BQUEsc0JBQ0EsRUFBQSxLQUFBLFFBQUEsTUFBQSx1QkFFQSxFQUFBLEtBQUEsVUFDQSxFQUFBLEVBQUEsU0FFQSxFQUFBLElBQUEsSUFBQSxJQUFBLFVBQUEsT0FBQSxHQUNBLElBQUEsTUFDQSxRQUFBLHFCQUNBLEtBQUEsaURBQ0EsUUFBQSxLQUdBLEVBQUEsS0FBQSxNQUNBLE1BQUEsZ0JBQ0EsT0FBQSxFQUNBLFNBQUEsRUFDQSxTQUFBLFNBQUEsR0FHQSxNQUZBLE1BQUEsT0FBQSxHQUNBLEtBQUEsU0FDQSxHQUNBLEtBQUEsS0FBQSxRQUNBLFFBQUEsR0FFQSxNQUFBLFNBQUEsR0FBQSxVQUFBLFdBQUEsRUFBQSxZQUVBLEVBQUEsWUFBQSxRQUFBLFdBQ0EsS0FBQSxRQUFBLGFBQUEsU0FDQSxFQUFBLGFBQUEsUUFDQSxLQUFBLFVBQUEsYUFBQSxRQUVBLEVBQUEsUUFDQSxNQUVBLEVBQUEsWUFBQSxRQUFBLFdBQ0EsS0FBQSxRQUFBLGFBQUEsUUFDQSxFQUFBLGFBQUEsU0FDQSxLQUFBLFVBQUEsYUFBQSxTQUVBLEtBQUEsT0FBQSxRQUVBLEVBQUEsUUFDQSxNQUVBLEVBQUEsWUFBQSxRQUFBLFdBQ0EsRUFBQSxNQUFBLEtBQUEsU0FBQSxjQUVBLEVBQUEsU0FJQSxFQUFBLFdBR0EsTUFFQSxFQUFBLFlBQUEsUUFBQSxXQUNBLEdBQUEsS0FBQSxZQUNBLEtBQUEsWUFBQSxFQUNBLEVBQUEsU0FFQSxFQUFBLFNBR0EsS0FBQSxRQUFBLGFBQUEsU0FDQSxFQUFBLGFBQUEsU0FFQSxLQUFBLE9BQUEsUUFFQSxFQUFBLFNBQUEsY0FFQSxLQUFBLE9BQUEsVUFBQSxXQUFBLFFBR0EsS0FBQSxZQUFBLEVBQ0EsRUFBQSxVQUVBLEtBQUEsUUFBQSxhQUFBLFFBQ0EsRUFBQSxhQUFBLFNBRUEsS0FBQSxPQUFBLFFBRUEsRUFBQSxZQUFBLGNBRUEsS0FBQSxPQUFBLFVBQUEsV0FBQSxNQUdBLEtBQUEsVUFBQSxhQUFBLFNBRUEsS0FBQSxPQUFBLFFBQUEsSUFDQSxNQUVBLGVBQUEsUUFBQSxTQUNBLEtBQUEsT0FBQSxTQUFBLGVBQUEsUUFBQSxTQUVBLEtBQUEsT0FBQSxVQUFBLGlCQUVBLEtBQUEsUUFBQSxPQUFBLEtBQUEsTUFBQSxLQUFBLE9BQUEsYUFFQSxLQUFBLE9BQUEsYUFBQSxHQUFBLFNBQUEsV0FDQSxLQUFBLE1BQUEsS0FBQSxPQUFBLGFBQ0EsS0FBQSxTQUdBLFFBQUEsV0FDQSxLQUFBLFNBQUEsYUFBQSxRQUNBLEtBQUEsU0FBQSxTQUFBLEdBQ0EsS0FBQSxTQUFBLFVBQUEsR0FFQSxLQUFBLFdBQUEsSUFBQSxJQUFBLElBQUEsVUFBQSxhQUFBLEtBQUEsVUFDQSxJQUFBLFdBQ0EsS0FBQSxjQUNBLFFBQUEsaUJBR0EsS0FBQSxXQUFBLGFBQUEsUUFDQSxLQUFBLFdBQUEsU0FBQSxHQUNBLEtBQUEsV0FBQSxVQUFBLEVBRUEsSUFBQSxHQUFBLElBQUEsVUFBQSxhQUFBLEtBQUEsVUFDQSxJQUFBLE1BQ0EsUUFBQSxzQkFHQSxNQUFBLFVBQUEsSUFBQSxJQUFBLElBQUEsVUFBQSxPQUFBLEdBQ0EsSUFBQSxNQUNBLFFBQUEsS0FBQSxTQUFBLElBQUEsVUFBQSxpQkFHQSxLQUFBLFFBQUEsSUFBQSxJQUFBLElBQUEsVUFBQSxPQUFBLEdBQ0EsSUFBQSxNQUNBLFFBQUEsOEJBR0EsR0FBQSxLQUFBLE9BQUEsOENBQUEsR0FBQSxLQUFBLE9BQUEsNkNBQ0EsS0FBQSxVQUFBLElBQUEsSUFBQSxJQUFBLFVBQUEsT0FBQSxHQUNBLElBQUEsTUFDQSxRQUFBLGdCQUdBLEtBQUEsa0JBQ0EsS0FBQSxVQUFBLElBQUEsVUFBQSxrRUFBQSxLQUFBLFVBQUEsR0FBQSw4RUFBQSxLQUFBLFVBQUEsR0FBQSxpRUFBQSxFQUFBLDRDQUFBLEdBQUEsS0FBQSxVQUFBLEdBQUEsUUFBQSxVQUFBLEtBQUEsVUFBQSxHQUFBLGlCQUFBLFNBRUEsS0FBQSxVQUFBLE1BQUEsSUFBQSxLQUFBLFVBQUEsR0FBQSxnQkFBQSxHQUFBLFNBQUEsU0FBQSxFQUFBLEdBQ0EsS0FBQSxZQUFBLEVBQUEsTUFBQSxHQUNBLEVBQUEsTUFBQSxJQUNBLFFBRUEsS0FBQSxVQUFBLElBQUEsVUFBQSxrRUFBQSxLQUFBLFVBQUEsR0FBQSwrQkFBQSxFQUFBLHFDQUFBLEdBQUEsS0FBQSxVQUFBLEdBQUEsVUFBQSxTQUVBLEtBQUEsVUFBQSxNQUFBLElBQUEsS0FBQSxVQUFBLEdBQUEsU0FBQSxHQUFBLFNBQUEsU0FBQSxFQUFBLEdBQ0EsS0FBQSxZQUFBLEVBQUEsT0FDQSxFQUFBLE1BQUEsSUFDQSxRQUlBLEtBQUEsVUFBQSxJQUFBLElBQUEsSUFBQSxVQUFBLE9BQUEsR0FDQSxJQUFBLE1BQ0EsUUFBQSxhQUNBLEtBQUEsRUFBQSx5Q0FJQSxJQUFBLFVBQUEsT0FBQSxHQUNBLElBQUEsT0FDQSxNQUFBLGlCQUlBLGFBQUEsV0FDQSxLQUFBLFFBQUEsSUFBQSxJQUFBLElBQUEsVUFBQSxPQUFBLEtBQUEsV0FDQSxJQUFBLE1BQ0EsUUFBQSxVQUNBLEtBQ0EsSUFBQSxNQUNBLFFBQUEsaUJBQ0EsS0FBQSw2Q0FFQSxJQUFBLE1BQ0EsUUFBQSxxQkFDQSxLQUFBLCtDQUVBLElBQUEsTUFDQSxRQUFBLG9CQUNBLEtBQUEsbURBSUEsS0FBQSxRQUFBLE1BQUEsdUJBQUEsT0FBQSxXQUNBLEtBQUEsTUFBQSxLQUFBLFlBQUEsY0FDQSxLQUFBLE1BQUEsS0FBQSxTQUFBLGNBR0EsS0FBQSxRQUFBLE1BQUEsdUJBQUEsUUFBQSxXQUNBLEtBQUEsTUFBQSxLQUFBLFNBQUEsY0FDQSxLQUFBLE1BQUEsS0FBQSxZQUFBLGNBR0EsS0FBQSxRQUFBLE1BQUEsc0JBQUEsT0FBQSxXQUNBLEtBQUEsTUFBQSxLQUFBLFlBQUEsZUFDQSxLQUFBLE1BQUEsS0FBQSxTQUFBLGtCQUdBLEtBQUEsUUFBQSxNQUFBLHNCQUFBLFFBQUEsV0FDQSxLQUFBLE1BQUEsS0FBQSxTQUFBLGVBQ0EsS0FBQSxNQUFBLEtBQUEsWUFBQSxtQkFJQSxZQUFBLFdBQ0EsS0FBQSxPQUFBLElBQUEsS0FBQSxJQUFBLFNBQUEsV0FBQSxtQkFDQSxLQUFBLE9BQUEsWUFDQSxTQUFBLElBQ0EsU0FBQSxHQUNBLDJCQUFBLEVBQ0EsYUFBQSxFQUNBLFdBQUEsR0FBQSxTQUFBLEtBQUEsT0FBQSx1Q0FBQSxHQUNBLFNBQUEsU0FBQSxLQUFBLE9BQUEsc0NBQUEsR0FDQSxXQUFBLEtBQUEsT0FBQSx1Q0FBQSxLQUVBLEtBQUEsT0FBQSxhQUFBLGdCQUFBLEdBQ0EsS0FBQSxPQUFBLGFBQUEsb0JBQ0EsS0FBQSxPQUFBLFNBQUEsZ0JBQUEsR0FBQSxJQUNBLEtBQUEsT0FBQSxhQUFBLFNBQUEsS0FBQSxTQUFBLFlBQ0EsS0FBQSxPQUFBLGFBQUEsUUFBQSxxQkFDQSxLQUFBLE9BQUEsU0FBQSxjQUFBLEtBQUEsT0FBQSxpQ0FBQSxXQUVBLElBQUEsR0FBQSxJQUFBLFFBQUEsMEJBQ0EsR0FDQSxlQUFBLFNBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxHQUNBLE1BQUEsS0FBQSxFQUFBLFFBQUEsRUFBQSxTQUFBLFNBRUEsS0FBQSxLQUFBLFNBQ0EsSUFBQSxlQUFBLE9BQUEsYUFDQSxRQUNBLE9BQUEsdUJBQ0EsT0FBQSxHQUVBLFdBQ0EsU0FDQSxHQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsRUFBQSxVQUVBLE1BQUEsU0FYQSxTQWtCQSxHQUFBLGFBQUEsR0FHQSxLQUFBLE9BQUEsVUFBQSxpQkFBQSxZQUFBLEtBQUEsbUJBQUEsR0FDQSxLQUFBLE9BQUEsVUFBQSxpQkFBQSxXQUFBLEtBQUEsbUJBQUEsR0FDQSxLQUFBLE9BQUEsVUFBQSxpQkFBQSxPQUFBLEtBQUEsS0FBQSxLQUFBLE9BQUEsSUFHQSxlQUFBLFdBQ0EsS0FBQSxXQUFBLEdBQUEsYUFDQSxNQUFBLEVBQ0EsVUFBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsRUFDQSxJQUFBLEdBQUEsS0FBQSxZQUFBLEdBQ0EsSUFNQSxNQUxBLEdBQUEsS0FBQSxVQUFBLEVBQUEsR0FBQSxNQUVBLEVBQUEsRUFBQSxRQUFBLFFBQUEsY0FDQSxFQUFBLEVBQUEsUUFBQSxNQUFBLGNBR0EsTUFBQSxJQUdBLElBTUEsTUFMQSxHQUFBLEtBQUEsY0FBQSxHQUFBLE1BRUEsRUFBQSxFQUFBLFFBQUEsUUFBQSxjQUNBLEVBQUEsRUFBQSxRQUFBLE1BQUEsY0FHQSxNQUFBLElBRUEsTUFBQSxNQUdBLEtBQUEsV0FBQSxPQUFBLE1BQUEsU0FBQSxlQUdBLE1BQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxLQUFBLFdBQUEsT0FBQSxFQUtBLElBSEEsRUFBQSxFQUFBLFFBQUEsT0FBQSxLQUNBLEVBQUEsRUFBQSxRQUFBLE9BQUEsS0FFQSxHQUFBLEtBQUEsT0FBQSxxQ0FBQSxDQUNBLEtBQUEsY0FDQSxhQUFBLEtBQUEsYUFHQSxJQUFBLEdBQUEsU0FBQSxLQUFBLE9BQUEsOENBQUEsSUFFQSxNQUFBLGFBQUEsV0FBQSxXQUNBLEtBQUEsS0FBQSxTQUNBLElBQUEsZUFBQSxPQUFBLGFBQ0EsUUFDQSxPQUFBLDRCQUNBLFFBQUEsRUFDQSxTQUFBLEtBQUEsUUFBQSxJQUVBLFVBQUEsRUFDQSxXQUNBLFNBQ0EsR0FBQSxTQUFBLEdBQ0EsS0FBQSxRQUFBLE9BQUEsRUFBQSxNQUVBLEdBQUEsS0FBQSxZQUNBLEtBQUEsT0FBQSxvQkFBQSxJQUFBLEdBQUEsS0FBQSxPQUFBLGFBQUEsb0JBQ0EsS0FBQSxRQUFBLElBQUEsVUFBQSxLQUFBLFFBQUEsSUFBQSxlQUlBLE1BQUEsVUFJQSxLQUFBLE1BQUEsT0FFQSxNQUFBLFFBQUEsT0FBQSxHQUVBLEdBQUEsS0FBQSxZQUNBLEtBQUEsT0FBQSxvQkFBQSxJQUFBLEdBQUEsS0FBQSxPQUFBLGFBQUEsb0JBQ0EsS0FBQSxRQUFBLElBQUEsVUFBQSxLQUFBLFFBQUEsSUFBQSxhQVFBLE9BSEEsTUFBQSxXQUFBLElBQUEsTUFBQSxLQUFBLE9BQUEsV0FDQSxLQUFBLFNBQUEsSUFBQSxNQUFBLEVBRUEsR0FHQSxrQkFBQSxTQUFBLEdBQ0EsRUFBQSxrQkFDQSxFQUFBLGtCQUdBLEtBQUEsU0FBQSxHQUNBLEVBQUEsa0JBQ0EsRUFBQSxrQkFFQSxHQUFBLEtBQUEsT0FBQSw4Q0FBQSxHQUFBLEtBQUEsT0FBQSw4Q0FDQSxLQUFBLFlBQUEsRUFBQSxhQUFBLFFBSUEsWUFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLEdBQUEsRUFFQSxJQUFBLEtBQUEsRUFBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLFdBQUEsS0FBQSxFQUFBLEtBRUEsSUFBQSxFQUFBLENBQ0EsR0FBQSxHQUFBLEtBQUEsT0FBQSw2Q0FBQSxPQUFBLENBRUEsS0FBQSxLQUFBLFVBQUEsS0FBQSxPQUFBLHFDQUFBLEdBR0EsTUFGQSxNQUFBLFlBQUEsRUFBQSxRQUFBLEVBQUEsaURBRUEsQ0FHQSxJQUFBLEVBQUEsS0FBQSxTQUFBLEtBQUEsT0FBQSxtQ0FHQSxNQUZBLE1BQUEsWUFBQSxFQUFBLFFBQUEsRUFBQSx1Q0FFQSxDQUdBLElBQUEsS0FBQSxPQUFBLHlDQUNBLEtBQUEsTUFDQSxNQUFBLGdDQUNBLEtBQUEsRUFDQSxHQUFBLEtBQ0EsT0FBQSxJQUNBLFFBRUEsS0FBQSxXQUFBLEVBQUEsUUFBQSxHQUNBLEtBQUEsT0FBQSxhQUVBLENBQ0EsR0FBQSxHQUFBLEtBQUEsT0FBQSw0Q0FBQSxPQUFBLENBRUEsS0FBQSxLQUFBLFVBQUEsS0FBQSxPQUFBLG9DQUFBLEdBR0EsTUFGQSxNQUFBLFlBQUEsRUFBQSxPQUFBLEVBQUEsZ0RBRUEsQ0FHQSxJQUFBLEVBQUEsS0FBQSxTQUFBLEtBQUEsT0FBQSxtQ0FHQSxNQUZBLE1BQUEsWUFBQSxFQUFBLE9BQUEsRUFBQSx1Q0FFQSxDQUdBLE1BQUEsV0FBQSxFQUFBLFFBQ0EsS0FBQSxPQUFBLFVBR0EsT0FHQSxVQUFBLFNBQUEsRUFBQSxHQUdBLE1BRkEsR0FBQSxFQUFBLE1BQUEsS0FFQSxJQUFBLEVBQUEsUUFBQSxFQUFBLEtBQUEsTUFBQSxLQUFBLFFBR0EsV0FBQSxTQUFBLEVBQUEsRUFBQSxHQUNBLEVBQUEsR0FBQSxPQUNBLEVBQUEsR0FBQSxDQUVBLElBQUEsR0FBQSxLQUFBLGlCQUVBLEVBQUEsR0FBQSxTQUNBLEdBQUEsT0FBQSxPQUFBLEdBQ0EsRUFBQSxPQUFBLFNBQUEsY0FBQSxFQUFBLFVBQ0EsRUFBQSxPQUFBLE9BQUEsRUFBQSxNQUNBLEVBQUEsT0FBQSxXQUFBLEtBQUEsT0FBQSxVQUNBLEVBQUEsT0FBQSxTQUFBLEVBRUEsSUFBQSxHQUFBLEdBQUEsZUFDQSxHQUFBLEtBQUEsT0FBQSxlQUFBLE9BQUEsY0FDQSxFQUFBLGlCQUFBLGFBQUEsUUFDQSxFQUFBLGlCQUFBLFVBQUEsSUFBQSxLQUFBLGVBQUEsU0FFQSxFQUFBLE9BQUEsV0FBQSxTQUFBLEdBQ0EsR0FBQSxFQUFBLGlCQUFBLENBQ0EsR0FBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLE1BQUEsSUFBQSxDQUNBLEdBQUEsTUFBQSxhQUFBLFNBQUEsRUFBQSxPQUVBLEtBQUEsTUFFQSxFQUFBLE9BQUEsV0FDQSxHQUFBLE1BQUEsRUFBQSxPQUFBLENBQ0EsR0FBQSxHQUFBLEtBQUEsTUFBQSxFQUFBLGFBQ0EsSUFBQSxHQUFBLEVBQUEsUUFBQSxDQUNBLEVBQUEsUUFDQSxJQUFBLEdBQUEsU0FBQSxFQUFBLElBQUEsR0FDQSxFQUFBLFNBQUEsRUFBQSxPQUFBLElBQ0EsTUFBQSxPQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsT0FBQSxLQUFBLEtBQUEsRUFBQSxPQUFBLEtBQUEsS0FBQSxFQUFBLE9BQUEsS0FBQSxLQUFBLE9BRUEsTUFBQSxhQUFBLEVBQUEsRUFBQSxXQUdBLEtBQUEsTUFFQSxFQUFBLEtBQUEsSUFHQSxlQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxJQUFBLFVBQUEsWUFBQSxLQUFBLFdBQ0EsSUFBQSxNQUNBLEtBQUEsMkVBQUEsRUFBQSw0QkFBQSxHQUFBLEVBQUEsaUJBR0EsT0FBQSxLQUFBLElBQUEsSUFHQSxhQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsTUFBQSxhQUFBLFNBQUEsU0FDQSxFQUFBLE1BQUEsYUFBQSxTQUFBLFFBRUEsRUFBQSxNQUFBLEtBQUEsU0FBQSxrQkFDQSxFQUFBLE1BQUEsS0FBQSxhQUFBLGVBQUEsZUFDQSxFQUFBLE1BQUEsS0FBQSxZQUFBLGFBRUEsRUFBQSxNQUFBLFFBQUEsSUFBQSxXQUFBLFlBQUEsRUFDQSxFQUFBLE1BQUEsbUJBQUEsR0FBQSxRQUFBLFdBQ0EsRUFBQSxZQUlBLFlBQUEsU0FBQSxFQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsS0FBQSxlQUFBLEVBQUEsRUFBQSxLQUNBLE1BQUEsYUFBQSxFQUFBLElBR0EsZUFBQSxXQUNBLE1BQUEsbUJBQUEsUUFBQSxhQUFBLEtBQUEsVUFBQSxVQUFBLFFBQUEsZUFJQSxLQUFBLFFBQUEsV0FDQSxHQUFBLGdCQUFBLFFDbGhCQSxlQUFBLE9BQUEsUUFBQSxTQUFBLFFBQ0EsT0FBQSxXQUNBLE9BQUEsZ0JBQUEsT0FBQSxpQkFBQSw4QkFFQSxJQUFBLFFBQUEsUUFDQSxPQUFBLEVBQ0EsT0FBQSxPQUNBLFlBQUEsT0FDQSxRQUFBLEVBQ0EsV0FBQSxFQUNBLGFBQUEsRUFDQSxhQUFBLEVBQ0EsWUFBQSxFQUNBLFlBQUEsRUFDQSxXQUFBLEVBQ0EsTUFBQSxJQUNBLE9BQUEsRUFDQSxNQUFBLEVBQUEscUNBQ0EsSUFBQSxjQUNBLEtBQUEsK0NBQUEsSUFBQSxnQkFBQSxPQUFBLE1BQUEsV0FDQSxPQUNBLEtBQUEsb0NBQUEsRUFBQSwrQkFDQSxNQUFBLEtBQ0EsTUFBQSxPQUNBLE9BQUEsY0FDQSxRQUFBLEtBQUEsb0JBRUEsS0FBQSxrQ0FBQSxFQUFBLCtCQUNBLE1BQUEsS0FDQSxNQUFBLE9BQ0EsT0FBQSxjQUNBLFFBQUEsS0FBQSxvQkFFQSxLQUFBLHlDQUFBLEVBQUEsa0NBQ0EsTUFBQSxLQUNBLE1BQUEsR0FDQSxPQUFBLE9BQ0EsUUFBQSxLQUFBLG9CQUVBLEtBQUEsMENBQUEsRUFBQSxtQ0FDQSxNQUFBLEtBQ0EsT0FBQSxHQUNBLE9BQUEsT0FDQSxRQUFBLEtBQUEsb0JBRUEsS0FBQSx5Q0FBQSxFQUFBLHNDQUNBLE1BQUEsS0FDQSxNQUFBLElBQ0EsT0FBQSxTQUNBLFFBQUEsS0FBQSxvQkFFQSxLQUFBLDBDQUFBLEVBQUEsdUNBQ0EsTUFBQSxLQUNBLE1BQUEsR0FDQSxPQUFBLFNBQ0EsUUFBQSxLQUFBLG9CQUVBLEtBQUEsb0NBQUEsRUFBQSx3Q0FDQSxNQUFBLEtBQ0EsTUFBQSxLQUNBLE9BQUEsUUFDQSxRQUFBLEtBQUEsb0JBRUEsVUFDQSxLQUFBLEVBQUEsVUFDQSxNQUFBLEtBQ0EsUUFBQSxLQUFBLFFBRUEsS0FBQSxFQUFBLGlDQUNBLElBQUEsaUJBQ0EsTUFBQSxLQUNBLEtBQUEsRUFDQSxRQUFBLEtBQUEsU0FFQSxLQUFBLEVBQUEsc0NBQ0EsSUFBQSxpQkFDQSxNQUFBLEtBQ0EsS0FBQSxFQUNBLFFBQUEsS0FBQSxTQUVBLFdBQ0EsTUFDQSxHQUFBLFdBQ0EsR0FBQSxrQkFDQSxNQUFBLFdBQUEsRUFBQSxJQUFBLEtBQUEsR0FBQSxJQUFBLE9BQUEsZ0JBRUEsSUFBQSxPQUFBLEtBQUEsT0FBQSxzQ0FDQSxTQUNBLE1BQUEsUUFBQSxrQkFBQSxJQUNBLE1BQUEsS0FBQSxPQUVBLGVBQUEsWUFBQSxPQUdBLGVBQUEsS0FBQSxTQUFBLEdBQ0EsS0FBQSxXQUNBLFFBQUEsRUFBQSxFQUNBLE9BQUEsRUFBQSxFQUNBLFlBQUEsRUFBQSxPQUNBLFdBQUEsRUFBQSxNQUNBLFlBQUEsRUFBQSxPQUFBLEtBQ0EsUUFDQSxLQUFBLE1BRUEsS0FBQSxXQUFBLFFBQUEsaUJBRUEsTUFBQSxTQUlBLGVBQUEsT0FBQSxRQUFBLFdBQUEsWUFBQSxLQUFBLEtBQUEsUUFDQSxLQUFBLE9BQUEsUUFHQSxJQUFBLE9BQUEsZUFBQSxPQUFBLFFBQUEsSUFBQSxRQUNBLFVBQUEsR0FDQSxPQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsS0FBQSxPQUFBLEdBQUEsZUFBQSxRQUFBLEtBQUEsT0FBQSxLQUFBLE1BRUEsRUFBQSxHQUFBLFNBQ0EsR0FBQSxPQUFBLE9BQUEsS0FBQSxPQUFBLE1BQ0EsRUFBQSxPQUFBLFNBQUEsMEJBQ0EsRUFBQSxPQUFBLFlBQUEsS0FBQSxXQUNBLEVBQUEsT0FBQSxPQUFBLEtBQUEsT0FBQSxLQUFBLE1BQ0EsRUFBQSxPQUFBLE9BQUEsRUFBQSxNQUNBLEVBQUEsT0FBQSxXQUFBLEtBQUEsT0FBQSxHQUFBLE9BQUEsVUFDQSxFQUFBLE9BQUEsU0FBQSxLQUFBLE9BQUEsT0FFQSxJQUFBLEdBQUEsR0FBQSxlQUNBLEdBQUEsS0FBQSxPQUFBLGVBQUEsT0FBQSxjQUNBLEVBQUEsaUJBQUEsYUFBQSxRQUNBLEVBQUEsaUJBQUEsVUFBQSxJQUFBLEtBQUEsZUFBQSxTQUVBLEVBQUEsT0FBQSxXQUFBLFNBQUEsR0FDQSxHQUFBLEVBQUEsaUJBQUEsQ0FDQSxHQUFBLEdBQUEsRUFBQSxPQUFBLEVBQUEsTUFBQSxJQUFBLENBQ0EsR0FBQSxNQUFBLGFBQUEsU0FBQSxFQUFBLE9BRUEsS0FBQSxNQUVBLEVBQUEsT0FBQSxXQUNBLEdBQUEsTUFBQSxFQUFBLE9BQUEsQ0FDQSxHQUFBLEdBQUEsS0FBQSxNQUFBLEVBQUEsYUFFQSxJQUFBLEVBQUEsU0FDQSxFQUFBLFNBQ0EsS0FBQSxPQUFBLEdBQUEsT0FBQSxPQUFBLEtBQUEsRUFBQSxPQUFBLEtBQUEsS0FBQSxFQUFBLE9BQUEsS0FBQSxLQUFBLEVBQUEsT0FBQSxLQUFBLFdBRUEsS0FBQSxPQUFBLEdBQUEsYUFBQSxFQUFBLEVBQUEsV0FHQSxLQUFBLE1BRUEsRUFBQSxLQUFBLEdBRUEsS0FBQSxTQUdBLGtCQUFBLFNBQUEsR0FDQSxLQUFBLFdBQUEsUUFBQSxFQUFBLE9BQUEsRUFBQSxRQUdBLE1BQUEsV0FDQSxLQUFBLFdBQUEsUUFBQSxXQUVBLGVBQUEsT0FBQSxRQUFBLFdBQUEsTUFBQSxLQUFBLE1BQ0EsS0FBQSxPQUFBLEdBQUEsT0FBQSxXQUdBLElBQUEsSUFBQSxnQ0FBQSxlQUFBLE9BQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiRXh0Lm5zKCdNYXJrZG93bkVkaXRvcicpO1xuTWFya2Rvd25FZGl0b3IgPSBmdW5jdGlvbihjb25maWcpIHtcbiAgICBjb25maWcgPSBjb25maWcgfHwge307XG4gICAgTWFya2Rvd25FZGl0b3Iuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsY29uZmlnKTtcbn07XG5FeHQuZXh0ZW5kKE1hcmtkb3duRWRpdG9yLEV4dC5Db21wb25lbnQse1xuICAgIHdpbmRvdzp7fSxjb25maWc6IHt9XG59KTtcbkV4dC5yZWcoJ21hcmtkb3duZWRpdG9yJyxNYXJrZG93bkVkaXRvcik7XG5tYXJrZG93bkVkaXRvciA9IG5ldyBNYXJrZG93bkVkaXRvcigpO1xuXG5tYXJrZG93bkVkaXRvci5FZGl0b3IgPSBmdW5jdGlvbihjb25maWcpIHtcbiAgICBjb25maWcgPSBjb25maWcgfHwge307XG4gICAgY29uZmlnLnJlc291cmNlID0gTU9EeC5yZXF1ZXN0LmlkIHx8IDA7XG4gICAgbWFya2Rvd25FZGl0b3IuRWRpdG9yLnN1cGVyY2xhc3MuY29uc3RydWN0b3IuY2FsbCh0aGlzLGNvbmZpZyk7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XG59O1xuRXh0LmV4dGVuZChtYXJrZG93bkVkaXRvci5FZGl0b3IsRXh0LkNvbXBvbmVudCx7XG4gICAgcmVtYXJrYWJsZTogJydcbiAgICAsZnVsbFNjcmVlbjogZmFsc2VcbiAgICAsaW5pdENvbXBvbmVudDogZnVuY3Rpb24oKSB7XG4gICAgICAgIE1hcmtkb3duRWRpdG9yLnN1cGVyY2xhc3MuaW5pdENvbXBvbmVudC5jYWxsKHRoaXMpO1xuXG4gICAgICAgIEV4dC5vblJlYWR5KHRoaXMucmVuZGVyLCB0aGlzKTtcbiAgICB9XG5cbiAgICAscmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy50ZXh0YXJlYSA9IEV4dC5nZXQoJ3RhJyk7XG4gICAgICAgIGlmICghdGhpcy50ZXh0YXJlYSkgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuYnVpbGRVSSgpO1xuICAgICAgICB0aGlzLnJlZ2lzdGVyQWNlKCk7XG4gICAgICAgIHRoaXMucmVnaXN0ZXJNYXJrZWQoKTtcbiAgICAgICAgdGhpcy5idWlsZFRvb2xib3goKTtcblxuICAgICAgICB2YXIgcHJldmlld0J1dHRvbiA9IHRoaXMudG9vbEJveC5jaGlsZCgnLnByZXZpZXctYnV0dG9uJyk7XG4gICAgICAgIHZhciBmdWxsc2NyZWVuQnV0dG9uID0gdGhpcy50b29sQm94LmNoaWxkKCcuZnVsbHNjcmVlbi1idXR0b24nKTtcbiAgICAgICAgdmFyIHNwbGl0c2NyZWVuQnV0dG9uID0gdGhpcy50b29sQm94LmNoaWxkKCcuc3BsaXRzY3JlZW4tYnV0dG9uJyk7XG5cbiAgICAgICAgdmFyIGNvbnRlbnQgPSB0aGlzLmNvbnRlbnRNRDtcbiAgICAgICAgdmFyIHdyYXBwZXIgPSBjb250ZW50LnBhcmVudCgpO1xuXG4gICAgICAgIHZhciBwcmV2aWV3QnV0dG9uT2ZmID0gRXh0LmdldChFeHQuRG9tSGVscGVyLmFwcGVuZCh3cmFwcGVyLHtcbiAgICAgICAgICAgIHRhZzogJ2RpdicsXG4gICAgICAgICAgICBjbGFzczogJ3ByZXZpZXctYnV0dG9uLW9mZicsXG4gICAgICAgICAgICBodG1sOiAnPGkgY2xhc3M9XCJpY29uIGljb24tZXllLXNsYXNoIGljb24tbGFyZ2VcIj48L2k+JyxcbiAgICAgICAgICAgIGhpZGRlbjogdHJ1ZVxuICAgICAgICB9KSk7XG5cbiAgICAgICAgdmFyIGRyb3BUYXJnZXQgPSBNT0R4LmxvYWQoe1xuICAgICAgICAgICAgeHR5cGU6ICdtb2R4LXRyZWVkcm9wJyxcbiAgICAgICAgICAgIHRhcmdldDogY29udGVudCxcbiAgICAgICAgICAgIHRhcmdldEVsOiBjb250ZW50LFxuICAgICAgICAgICAgb25JbnNlcnQ6IChmdW5jdGlvbihzKXtcbiAgICAgICAgICAgICAgICB0aGlzLmluc2VydChzKTtcbiAgICAgICAgICAgICAgICB0aGlzLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9KS5iaW5kKHRoaXMuZWRpdG9yKSxcbiAgICAgICAgICAgIGlmcmFtZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50ZXh0YXJlYS5vbignZGVzdHJveScsIGZ1bmN0aW9uKCkge2Ryb3BUYXJnZXQuZGVzdHJveSgpO30pO1xuXG4gICAgICAgIHByZXZpZXdCdXR0b24uYWRkTGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5wcmV2aWV3LnNldERpc3BsYXllZCgnYmxvY2snKTtcbiAgICAgICAgICAgIGNvbnRlbnQuc2V0RGlzcGxheWVkKCdub25lJyk7XG4gICAgICAgICAgICB0aGlzLnN0YXR1c0Jhci5zZXREaXNwbGF5ZWQoJ25vbmUnKTtcblxuICAgICAgICAgICAgcHJldmlld0J1dHRvbk9mZi5zaG93KClcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgcHJldmlld0J1dHRvbk9mZi5hZGRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLnByZXZpZXcuc2V0RGlzcGxheWVkKCdub25lJyk7XG4gICAgICAgICAgICBjb250ZW50LnNldERpc3BsYXllZCgnYmxvY2snKTtcbiAgICAgICAgICAgIHRoaXMuc3RhdHVzQmFyLnNldERpc3BsYXllZCgnYmxvY2snKTtcblxuICAgICAgICAgICAgdGhpcy5lZGl0b3IuZm9jdXMoKTtcblxuICAgICAgICAgICAgcHJldmlld0J1dHRvbk9mZi5oaWRlKCk7XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIHNwbGl0c2NyZWVuQnV0dG9uLmFkZExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChzcGxpdHNjcmVlbkJ1dHRvbi5jaGlsZCgnaScpLmhhc0NsYXNzKCdpY29uLXBhdXNlJykpIHtcblxuICAgICAgICAgICAgICAgIHNwbGl0c2NyZWVuQnV0dG9uLnR1cm5PbigpO1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgc3BsaXRzY3JlZW5CdXR0b24udHVybk9mZigpO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgIGZ1bGxzY3JlZW5CdXR0b24uYWRkTGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZnVsbFNjcmVlbiA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZnVsbFNjcmVlbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgZnVsbHNjcmVlbkJ1dHRvbi50dXJuT24oKTtcblxuICAgICAgICAgICAgICAgIHNwbGl0c2NyZWVuQnV0dG9uLnR1cm5PbigpO1xuXG5cbiAgICAgICAgICAgICAgICB0aGlzLnByZXZpZXcuc2V0RGlzcGxheWVkKCdibG9jaycpO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQuc2V0RGlzcGxheWVkKCdibG9jaycpO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZm9jdXMoKTtcblxuICAgICAgICAgICAgICAgIHdyYXBwZXIuYWRkQ2xhc3MoJ2Z1bGxzY3JlZW4nKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLnNldE9wdGlvbignbWF4TGluZXMnLCBudWxsKTtcblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZ1bGxTY3JlZW4gPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBmdWxsc2NyZWVuQnV0dG9uLnR1cm5PZmYoKTtcblxuICAgICAgICAgICAgICAgIHRoaXMucHJldmlldy5zZXREaXNwbGF5ZWQoJ25vbmUnKTtcbiAgICAgICAgICAgICAgICBjb250ZW50LnNldERpc3BsYXllZCgnYmxvY2snKTtcblxuICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLmZvY3VzKCk7XG5cbiAgICAgICAgICAgICAgICB3cmFwcGVyLnJlbW92ZUNsYXNzKCdmdWxsc2NyZWVuJyk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5zZXRPcHRpb24oJ21heExpbmVzJywgSW5maW5pdHkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnN0YXR1c0Jhci5zZXREaXNwbGF5ZWQoJ2Jsb2NrJyk7XG5cbiAgICAgICAgICAgIHRoaXMuZWRpdG9yLnJlc2l6ZSh0cnVlKTtcbiAgICAgICAgfSwgdGhpcyk7XG5cbiAgICAgICAgaWYgKG1hcmtkb3duRWRpdG9yLmNvbnRlbnQuY29udGVudCkge1xuICAgICAgICAgICAgdGhpcy5lZGl0b3Iuc2V0VmFsdWUobWFya2Rvd25FZGl0b3IuY29udGVudC5jb250ZW50KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVkaXRvci5zZWxlY3Rpb24uY2xlYXJTZWxlY3Rpb24oKTtcblxuICAgICAgICB0aGlzLnByZXZpZXcudXBkYXRlKHRoaXMucGFyc2UodGhpcy5lZGl0b3IuZ2V0VmFsdWUoKSkpO1xuXG4gICAgICAgIHRoaXMuZWRpdG9yLmdldFNlc3Npb24oKS5vbignY2hhbmdlJywgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICB0aGlzLnBhcnNlKHRoaXMuZWRpdG9yLmdldFZhbHVlKCkpO1xuICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgIH1cblxuICAgICxidWlsZFVJOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy50ZXh0YXJlYS5zZXREaXNwbGF5ZWQoJ25vbmUnKTtcbiAgICAgICAgdGhpcy50ZXh0YXJlYS5zZXRXaWR0aCgwKTtcbiAgICAgICAgdGhpcy50ZXh0YXJlYS5zZXRIZWlnaHQoMCk7XG5cbiAgICAgICAgdGhpcy50YU1hcmtkb3duID0gRXh0LmdldChFeHQuRG9tSGVscGVyLmluc2VydEJlZm9yZSh0aGlzLnRleHRhcmVhLCB7XG4gICAgICAgICAgICB0YWc6ICd0ZXh0YXJlYScsXG4gICAgICAgICAgICBuYW1lOiAndGFfbWFya2Rvd24nLFxuICAgICAgICAgICAgY2xhc3M6ICd0YV9tYXJrZG93bidcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHRoaXMudGFNYXJrZG93bi5zZXREaXNwbGF5ZWQoJ25vbmUnKTtcbiAgICAgICAgdGhpcy50YU1hcmtkb3duLnNldFdpZHRoKDApO1xuICAgICAgICB0aGlzLnRhTWFya2Rvd24uc2V0SGVpZ2h0KDApO1xuXG4gICAgICAgIHZhciB3cmFwcGVyID0gRXh0LkRvbUhlbHBlci5pbnNlcnRCZWZvcmUodGhpcy50ZXh0YXJlYSwge1xuICAgICAgICAgICAgdGFnOiAnZGl2JyxcbiAgICAgICAgICAgIGNsYXNzOiAnbWFya2Rvd24tY29udGFpbmVyJ1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmNvbnRlbnRNRCA9IEV4dC5nZXQoRXh0LkRvbUhlbHBlci5hcHBlbmQod3JhcHBlcix7XG4gICAgICAgICAgICB0YWc6ICdkaXYnLFxuICAgICAgICAgICAgY2xhc3M6IHRoaXMudGV4dGFyZWEuZG9tLmNsYXNzTmFtZSArICcgY29udGVudC1tZCdcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHRoaXMucHJldmlldyA9IEV4dC5nZXQoRXh0LkRvbUhlbHBlci5hcHBlbmQod3JhcHBlcix7XG4gICAgICAgICAgICB0YWc6ICdkaXYnLFxuICAgICAgICAgICAgY2xhc3M6ICdtYXJrZG93bi1ib2R5IHByZXZpZXctbWQnXG4gICAgICAgIH0pKTtcblxuICAgICAgICBpZiAoTU9EeC5jb25maWdbJ21hcmtkb3duZWRpdG9yLnVwbG9hZC5lbmFibGVfaW1hZ2VfdXBsb2FkJ10gPT0gMSB8fCBNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IudXBsb2FkLmVuYWJsZV9maWxlX3VwbG9hZCddID09IDEpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdHVzQmFyID0gRXh0LmdldChFeHQuRG9tSGVscGVyLmFwcGVuZCh3cmFwcGVyLHtcbiAgICAgICAgICAgICAgICB0YWc6ICdkaXYnLFxuICAgICAgICAgICAgICAgIGNsYXNzOiAnc3RhdHVzLWJhcidcbiAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuaXNNb2JpbGVEZXZpY2UoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzQmFyLmRvbS5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cInVwbG9hZC1iYXJcIj4gPGlucHV0IGNsYXNzPVwiaGlkZGVuXCIgbmFtZT1cImZpbGVcIiBpZD1cIicgKyB0aGlzLnN0YXR1c0Jhci5pZCArICctZmlsZVwiIHR5cGU9XCJmaWxlXCIgbXVsdGlwbGUgLz48aW5wdXQgY2xhc3M9XCJoaWRkZW5cIiBuYW1lPVwiZmlsZS1tb2JpbGVcIiBpZD1cIicgKyB0aGlzLnN0YXR1c0Jhci5pZCArICctZmlsZS1tb2JpbGVcIiB0eXBlPVwiZmlsZVwiIGFjY2VwdD1cImltYWdlLypcIiBjYXB0dXJlPVwiY2FtZXJhXCIgLz4nICsgXygnbWFya2Rvd25lZGl0b3Iuc3RhdHVzX2Jhcl9tZXNzYWdlX21vYmlsZScsIHtpZDogdGhpcy5zdGF0dXNCYXIuaWQgKyAnLWZpbGUnLCBpZF9tb2JpbGU6IHRoaXMuc3RhdHVzQmFyLmlkICsgJy1maWxlLW1vYmlsZSd9KSArICc8L2Rpdj4nO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0dXNCYXIuY2hpbGQoJyMnICsgdGhpcy5zdGF0dXNCYXIuaWQgKyAnLWZpbGUtbW9iaWxlJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uKGUsIGlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRmlsZXMoaW5wdXQuZmlsZXMsIDEpO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzQmFyLmRvbS5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz1cInVwbG9hZC1iYXJcIj4gPGlucHV0IGNsYXNzPVwiaGlkZGVuXCIgbmFtZT1cImZpbGVcIiBpZD1cIicgKyB0aGlzLnN0YXR1c0Jhci5pZCArICctZmlsZVwiIHR5cGU9XCJmaWxlXCIgbXVsdGlwbGU+JyArIF8oJ21hcmtkb3duZWRpdG9yLnN0YXR1c19iYXJfbWVzc2FnZScsIHtpZDogdGhpcy5zdGF0dXNCYXIuaWQgKyAnLWZpbGUnfSkgKyAnPC9kaXY+JztcblxuICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzQmFyLmNoaWxkKCcjJyArIHRoaXMuc3RhdHVzQmFyLmlkICsgJy1maWxlJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uKGUsIGlucHV0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRmlsZXMoaW5wdXQuZmlsZXMpO1xuICAgICAgICAgICAgICAgICAgICBpbnB1dC52YWx1ZSA9IFwiXCI7XG4gICAgICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdHVzQmFyID0gRXh0LmdldChFeHQuRG9tSGVscGVyLmFwcGVuZCh3cmFwcGVyLHtcbiAgICAgICAgICAgICAgICB0YWc6ICdkaXYnLFxuICAgICAgICAgICAgICAgIGNsYXNzOiAnc3RhdHVzLWJhcicsXG4gICAgICAgICAgICAgICAgaHRtbDogXygnbWFya2Rvd25lZGl0b3Iuc3RhdHVzX2Jhcl9kaXNhYmxlZCcpXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cblxuICAgICAgICBFeHQuRG9tSGVscGVyLmFwcGVuZCh3cmFwcGVyLHtcbiAgICAgICAgICAgIHRhZzogJ3NwYW4nLFxuICAgICAgICAgICAgc3R5bGU6ICdjbGVhcjogYm90aCdcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLGJ1aWxkVG9vbGJveDogZnVuY3Rpb24oKXtcbiAgICAgICAgdGhpcy50b29sQm94ID0gRXh0LmdldChFeHQuRG9tSGVscGVyLmFwcGVuZCh0aGlzLmNvbnRlbnRNRCx7XG4gICAgICAgICAgICB0YWc6ICdkaXYnLFxuICAgICAgICAgICAgY2xhc3M6ICd0b29sYm94JyxcbiAgICAgICAgICAgIGNuOiBbe1xuICAgICAgICAgICAgICAgIHRhZzogJ2RpdicsXG4gICAgICAgICAgICAgICAgY2xhc3M6ICdwcmV2aWV3LWJ1dHRvbicsXG4gICAgICAgICAgICAgICAgaHRtbDogJzxpIGNsYXNzPVwiaWNvbiBpY29uLWV5ZSBpY29uLWxhcmdlXCI+PC9pPidcbiAgICAgICAgICAgIH0se1xuICAgICAgICAgICAgICAgIHRhZzogJ2RpdicsXG4gICAgICAgICAgICAgICAgY2xhc3M6ICdzcGxpdHNjcmVlbi1idXR0b24nLFxuICAgICAgICAgICAgICAgIGh0bWw6ICc8aSBjbGFzcz1cImljb24gaWNvbi1wYXVzZSBpY29uLWxhcmdlXCI+PC9pPidcbiAgICAgICAgICAgIH0se1xuICAgICAgICAgICAgICAgIHRhZzogJ2RpdicsXG4gICAgICAgICAgICAgICAgY2xhc3M6ICdmdWxsc2NyZWVuLWJ1dHRvbicsXG4gICAgICAgICAgICAgICAgaHRtbDogJzxpIGNsYXNzPVwiaWNvbiBpY29uLWV4cGFuZCBpY29uLWxhcmdlXCI+PC9pPidcbiAgICAgICAgICAgIH1dXG4gICAgICAgIH0pKTtcblxuICAgICAgICB0aGlzLnRvb2xCb3guY2hpbGQoJy5zcGxpdHNjcmVlbi1idXR0b24nKS50dXJuT24gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuY2hpbGQoJ2knKS5yZW1vdmVDbGFzcygnaWNvbi1wYXVzZScpO1xuICAgICAgICAgICAgdGhpcy5jaGlsZCgnaScpLmFkZENsYXNzKCdpY29uLXN0b3AnKTtcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnRvb2xCb3guY2hpbGQoJy5zcGxpdHNjcmVlbi1idXR0b24nKS50dXJuT2ZmID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB0aGlzLmNoaWxkKCdpJykuYWRkQ2xhc3MoJ2ljb24tcGF1c2UnKTtcbiAgICAgICAgICAgIHRoaXMuY2hpbGQoJ2knKS5yZW1vdmVDbGFzcygnaWNvbi1zdG9wJyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy50b29sQm94LmNoaWxkKCcuZnVsbHNjcmVlbi1idXR0b24nKS50dXJuT24gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuY2hpbGQoJ2knKS5yZW1vdmVDbGFzcygnaWNvbi1leHBhbmQnKTtcbiAgICAgICAgICAgIHRoaXMuY2hpbGQoJ2knKS5hZGRDbGFzcygnaWNvbi1jb21wcmVzcycpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMudG9vbEJveC5jaGlsZCgnLmZ1bGxzY3JlZW4tYnV0dG9uJykudHVybk9mZiA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5jaGlsZCgnaScpLmFkZENsYXNzKCdpY29uLWV4cGFuZCcpO1xuICAgICAgICAgICAgdGhpcy5jaGlsZCgnaScpLnJlbW92ZUNsYXNzKCdpY29uLWNvbXByZXNzJyk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLHJlZ2lzdGVyQWNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5lZGl0b3IgPSBhY2UuZWRpdChFeHQuRG9tUXVlcnkuc2VsZWN0Tm9kZSgnZGl2LmNvbnRlbnQtbWQnKSk7XG4gICAgICAgIHRoaXMuZWRpdG9yLnNldE9wdGlvbnMoe1xuICAgICAgICAgICAgbWF4TGluZXM6IEluZmluaXR5LFxuICAgICAgICAgICAgbWluTGluZXM6IDI1LFxuICAgICAgICAgICAgZW5hYmxlQmFzaWNBdXRvY29tcGxldGlvbjogdHJ1ZSxcbiAgICAgICAgICAgIHByaW50TWFyZ2luOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dHdXR0ZXI6IHBhcnNlSW50KE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci5nZW5lcmFsLnNob3dfZ3V0dGVyJ10gfHwgMSkgPT0gMSxcbiAgICAgICAgICAgIGZvbnRTaXplOiBwYXJzZUludChNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IuZ2VuZXJhbC5mb250X3NpemUnXSkgfHwgMTIsXG4gICAgICAgICAgICBmb250RmFtaWx5OiBNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IuZ2VuZXJhbC5mb250X2ZhbWlseSddIHx8ICcnXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmVkaXRvci5nZXRTZXNzaW9uKCkuc2V0VXNlV3JhcE1vZGUodHJ1ZSk7XG4gICAgICAgIHRoaXMuZWRpdG9yLmdldFNlc3Npb24oKS5zZXRXcmFwTGltaXRSYW5nZSgpO1xuICAgICAgICB0aGlzLmVkaXRvci5yZW5kZXJlci5zZXRTY3JvbGxNYXJnaW4oMTAsIDEwKTtcbiAgICAgICAgdGhpcy5lZGl0b3IuZ2V0U2Vzc2lvbigpLnNldFZhbHVlKHRoaXMudGV4dGFyZWEuZ2V0VmFsdWUoKSk7XG4gICAgICAgIHRoaXMuZWRpdG9yLmdldFNlc3Npb24oKS5zZXRNb2RlKFwiYWNlL21vZGUvbWFya2Rvd25cIik7XG4gICAgICAgIHRoaXMuZWRpdG9yLnNldFRoZW1lKFwiYWNlL3RoZW1lL1wiICsgKE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci5nZW5lcmFsLnRoZW1lJ10gfHwgJ21vbm9rYWknKSk7XG5cbiAgICAgICAgdmFyIGxhbmdUb29scyA9IGFjZS5yZXF1aXJlKFwiYWNlL2V4dC9sYW5ndWFnZV90b29sc1wiKTtcbiAgICAgICAgdmFyIHJlc291cmNlc0NvbXBsZXRlciA9IHtcbiAgICAgICAgICAgIGdldENvbXBsZXRpb25zOiBmdW5jdGlvbihlZGl0b3IsIHNlc3Npb24sIHBvcywgcHJlZml4LCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGlmIChwcmVmaXgubGVuZ3RoID09PSAwKSB7IGNhbGxiYWNrKG51bGwsIFtdKTsgcmV0dXJuIH1cblxuICAgICAgICAgICAgICAgIE1PRHguQWpheC5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBtYXJrZG93bkVkaXRvci5jb25maWcuY29ubmVjdG9yVXJsXG4gICAgICAgICAgICAgICAgICAgICxwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ21nci9yZXNvdXJjZS9nZXRsaXN0J1xuICAgICAgICAgICAgICAgICAgICAgICAgLHByZWZpeDogcHJlZml4XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgci5yZXN1bHRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjb3BlOiB0aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBsYW5nVG9vbHMuYWRkQ29tcGxldGVyKHJlc291cmNlc0NvbXBsZXRlcik7XG5cblxuICAgICAgICB0aGlzLmVkaXRvci5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImRyYWdlbnRlclwiLCB0aGlzLmNhdGNoQW5kRG9Ob3RoaW5nLCBmYWxzZSk7XG4gICAgICAgIHRoaXMuZWRpdG9yLmNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgdGhpcy5jYXRjaEFuZERvTm90aGluZywgZmFsc2UpO1xuICAgICAgICB0aGlzLmVkaXRvci5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgdGhpcy5kcm9wLmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICB9XG5cbiAgICAscmVnaXN0ZXJNYXJrZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLnJlbWFya2FibGUgPSBuZXcgUmVtYXJrYWJsZSh7XG4gICAgICAgICAgICBodG1sOiB0cnVlLFxuICAgICAgICAgICAgaGlnaGxpZ2h0OiBmdW5jdGlvbiAoc3RyLCBsYW5nKSB7XG4gICAgICAgICAgICAgICAgdmFyIHZhbHVlID0gJyc7XG4gICAgICAgICAgICAgICAgaWYgKGxhbmcgJiYgaGxqcy5nZXRMYW5ndWFnZShsYW5nKSkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBobGpzLmhpZ2hsaWdodChsYW5nLCBzdHIpLnZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL1xcW1xcWy9nLCAnJiM5MTsmIzkxOycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9dXS9nLCAnJiM5MzsmIzkzOycpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGhsanMuaGlnaGxpZ2h0QXV0byhzdHIpLnZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXFxbXFxbL2csICcmIzkxOyYjOTE7Jyk7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUucmVwbGFjZSgvXV0vZywgJyYjOTM7JiM5MzsnKTtcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7fVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5yZW1hcmthYmxlLmlubGluZS5ydWxlci5kaXNhYmxlKFsgJ2JhY2t0aWNrcycgXSk7XG4gICAgfVxuXG4gICAgLHBhcnNlOiBmdW5jdGlvbihpbnB1dCkge1xuICAgICAgICB2YXIgb3V0cHV0ID0gdGhpcy5yZW1hcmthYmxlLnJlbmRlcihpbnB1dCk7XG5cbiAgICAgICAgb3V0cHV0ID0gb3V0cHV0LnJlcGxhY2UoLyU1Qi9nLCAnWycpO1xuICAgICAgICBvdXRwdXQgPSBvdXRwdXQucmVwbGFjZSgvJTVEL2csICddJyk7XG5cbiAgICAgICAgaWYgKE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci5scC5wYXJzZV9tb2R4X3RhZ3MnXSA9PSAxKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wYXJzZVJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5wYXJzZVJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdGltZW91dCA9IHBhcnNlSW50KE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci5scC5wYXJzZV9tb2R4X3RhZ3NfdGltZW91dCddIHx8IDMwMCk7XG5cbiAgICAgICAgICAgIHRoaXMucGFyc2VSZXF1ZXN0ID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIE1PRHguQWpheC5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICAgICAgdXJsOiBtYXJrZG93bkVkaXRvci5jb25maWcuY29ubmVjdG9yVXJsXG4gICAgICAgICAgICAgICAgICAgICxwYXJhbXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbjogJ21nci9lZGl0b3IvcHJvY2Vzc2NvbnRlbnQnXG4gICAgICAgICAgICAgICAgICAgICAgICAsY29udGVudDogb3V0cHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAscmVzb3VyY2U6IE1PRHgucmVxdWVzdC5pZFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBpc1VwbG9hZCA6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmV2aWV3LnVwZGF0ZShyLmRhdGEpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmZ1bGxTY3JlZW4gPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCh0aGlzLmVkaXRvci5nZXRDdXJzb3JQb3NpdGlvbigpLnJvdyArIDIpID49IHRoaXMuZWRpdG9yLmdldFNlc3Npb24oKS5nZXRTY3JlZW5MZW5ndGgoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJldmlldy5kb20uc2Nyb2xsVG9wID0gdGhpcy5wcmV2aWV3LmRvbS5zY3JvbGxIZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NvcGU6IHRoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfS5iaW5kKHRoaXMpLCB0aW1lb3V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMucHJldmlldy51cGRhdGUob3V0cHV0KTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuZnVsbFNjcmVlbiA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgaWYgKCh0aGlzLmVkaXRvci5nZXRDdXJzb3JQb3NpdGlvbigpLnJvdyArIDIpID49IHRoaXMuZWRpdG9yLmdldFNlc3Npb24oKS5nZXRTY3JlZW5MZW5ndGgoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByZXZpZXcuZG9tLnNjcm9sbFRvcCA9IHRoaXMucHJldmlldy5kb20uc2Nyb2xsSGVpZ2h0XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50YU1hcmtkb3duLmRvbS52YWx1ZSA9IHRoaXMuZWRpdG9yLmdldFZhbHVlKCk7XG4gICAgICAgIHRoaXMudGV4dGFyZWEuZG9tLnZhbHVlID0gb3V0cHV0O1xuXG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfVxuXG4gICAgLGNhdGNoQW5kRG9Ob3RoaW5nOiBmdW5jdGlvbihlKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICAsZHJvcDogZnVuY3Rpb24oZSkge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgaWYgKE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci51cGxvYWQuZW5hYmxlX2ltYWdlX3VwbG9hZCddID09IDEgfHwgTU9EeC5jb25maWdbJ21hcmtkb3duZWRpdG9yLnVwbG9hZC5lbmFibGVfZmlsZV91cGxvYWQnXSA9PSAxKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUZpbGVzKGUuZGF0YVRyYW5zZmVyLmZpbGVzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICxoYW5kbGVGaWxlczogZnVuY3Rpb24oZmlsZXMsIG1vYmlsZSkge1xuICAgICAgICBtb2JpbGUgPSBtb2JpbGUgfHwgMDtcblxuICAgICAgICBFeHQuZWFjaChmaWxlcywgZnVuY3Rpb24oZmlsZSkge1xuICAgICAgICAgICAgdmFyIGlzSW1hZ2UgPSAvXmltYWdlXFwvLy50ZXN0KGZpbGUudHlwZSk7XG5cbiAgICAgICAgICAgIGlmIChpc0ltYWdlKSB7XG4gICAgICAgICAgICAgICAgaWYgKE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci51cGxvYWQuZW5hYmxlX2ltYWdlX3VwbG9hZCddID09IDApIHJldHVybiB0cnVlO1xuXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNoZWNrVHlwZShNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IudXBsb2FkLmltYWdlX3R5cGVzJ10sIGZpbGUpKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mYWlsTWVzc2FnZShmaWxlLCAnaW1hZ2UnLCBfKCdtYXJrZG93bmVkaXRvci5lcnIudXBsb2FkLnVuc3VwcG9ydGVkX2ltYWdlJykpO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChmaWxlLnNpemUgPiBwYXJzZUludChNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IudXBsb2FkLm1heF9zaXplJ10pKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmFpbE1lc3NhZ2UoZmlsZSwgJ2ltYWdlJywgXygnbWFya2Rvd25lZGl0b3IuZXJyLnVwbG9hZC50b29fYmlnJykpO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IuY3JvcHBlci5lbmFibGVfY3JvcHBlciddID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgTU9EeC5sb2FkKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHh0eXBlOiAnbWFya2Rvd25lZGl0b3Itd2luZG93LWNyb3BwZXInXG4gICAgICAgICAgICAgICAgICAgICAgICAsZmlsZTogZmlsZVxuICAgICAgICAgICAgICAgICAgICAgICAgLG1kOiB0aGlzXG4gICAgICAgICAgICAgICAgICAgICAgICAsbW9iaWxlOiBtb2JpbGVcbiAgICAgICAgICAgICAgICAgICAgfSkuc2hvdygpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBsb2FkRmlsZShmaWxlLCAnaW1hZ2UnLCBtb2JpbGUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVkaXRvci5mb2N1cygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci51cGxvYWQuZW5hYmxlX2ZpbGVfdXBsb2FkJ10gPT0gMCkgcmV0dXJuIHRydWU7XG5cbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY2hlY2tUeXBlKE1PRHguY29uZmlnWydtYXJrZG93bmVkaXRvci51cGxvYWQuZmlsZV90eXBlcyddLCBmaWxlKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZhaWxNZXNzYWdlKGZpbGUsICdmaWxlJywgXygnbWFya2Rvd25lZGl0b3IuZXJyLnVwbG9hZC51bnN1cHBvcnRlZF9maWxlJykpO1xuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChmaWxlLnNpemUgPiBwYXJzZUludChNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IudXBsb2FkLm1heF9zaXplJ10pKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmFpbE1lc3NhZ2UoZmlsZSwgJ2ZpbGUnLCBfKCdtYXJrZG93bmVkaXRvci5lcnIudXBsb2FkLnRvb19iaWcnKSk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy51cGxvYWRGaWxlKGZpbGUsICdmaWxlJyk7XG4gICAgICAgICAgICAgICAgdGhpcy5lZGl0b3IuZm9jdXMoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9LCB0aGlzKTtcbiAgICB9XG5cbiAgICAsY2hlY2tUeXBlOiBmdW5jdGlvbihhbGxvd2VkVHlwZXMsIGZpbGUpIHtcbiAgICAgICAgYWxsb3dlZFR5cGVzID0gYWxsb3dlZFR5cGVzLnNwbGl0KCcsJyk7XG5cbiAgICAgICAgcmV0dXJuIGFsbG93ZWRUeXBlcy5pbmRleE9mKGZpbGUubmFtZS5zcGxpdCgnLicpLnBvcCgpKSAhPSAtMTtcbiAgICB9XG5cbiAgICAsdXBsb2FkRmlsZTogZnVuY3Rpb24oZmlsZSwgdHlwZSwgbW9iaWxlKSB7XG4gICAgICAgIHR5cGUgPSB0eXBlIHx8ICdmaWxlJztcbiAgICAgICAgbW9iaWxlID0gbW9iaWxlIHx8IDA7XG5cbiAgICAgICAgdmFyIHVwbG9hZGVyID0gdGhpcy5jcmVhdGVVcGxvYWRlcigpO1xuXG4gICAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdhY3Rpb24nLCAnbWdyL2VkaXRvci8nICsgdHlwZSArICd1cGxvYWQnKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCduYW1lJywgZmlsZS5uYW1lKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdyZXNvdXJjZScsIHRoaXMuY29uZmlnLnJlc291cmNlKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdtb2JpbGUnLCBtb2JpbGUpO1xuXG4gICAgICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICAgICAgeGhyLm9wZW4oJ1BPU1QnLCBtYXJrZG93bkVkaXRvci5jb25maWcuY29ubmVjdG9yVXJsKTtcbiAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ1Bvd2VyZWQtQnknLCAnTU9EeCcpO1xuICAgICAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignbW9kQXV0aCcsIEV4dC5BamF4LmRlZmF1bHRIZWFkZXJzLm1vZEF1dGgpO1xuXG4gICAgICAgIHhoci51cGxvYWQub25wcm9ncmVzcyA9IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgaWYgKGV2ZW50Lmxlbmd0aENvbXB1dGFibGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgY29tcGxldGUgPSAoZXZlbnQubG9hZGVkIC8gZXZlbnQudG90YWwgKiAxMDAgfCAwKTtcbiAgICAgICAgICAgICAgICB1cGxvYWRlci5jaGlsZCgnLnByb2dyZXNzJykuc2V0V2lkdGgoY29tcGxldGUgKyAnJScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LmJpbmQodGhpcyk7XG5cbiAgICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh4aHIuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KTtcbiAgICAgICAgICAgICAgICBpZiAocmVzLnN1Y2Nlc3MgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICB1cGxvYWRlci5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGltYWdlUHJlZml4ID0gKHR5cGUgPT0gJ2ltYWdlJykgPyAnIScgOiAnJztcbiAgICAgICAgICAgICAgICAgICAgdmFyIGVuZExpbmUgPSAodHlwZSA9PSAnaW1hZ2UnKSA/ICdcXG5cXG4nIDogJ1xcbic7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWRpdG9yLmluc2VydChpbWFnZVByZWZpeCArICdbJyArIHJlcy5vYmplY3QubmFtZSArICddKCcgKyByZXMub2JqZWN0LnBhdGggKyAnIFwiJyArIHJlcy5vYmplY3QubmFtZSArICdcIiknICsgZW5kTGluZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mYWlsVXBsb2FkZXIodXBsb2FkZXIsIHJlcy5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0uYmluZCh0aGlzKTtcblxuICAgICAgICB4aHIuc2VuZChmb3JtRGF0YSk7XG4gICAgfVxuXG4gICAgLGNyZWF0ZVVwbG9hZGVyOiBmdW5jdGlvbih0eXBlLCBmaWxlTmFtZSkge1xuICAgICAgICB2YXIgdXBsb2FkZXIgPSBFeHQuRG9tSGVscGVyLmluc2VydEZpcnN0KHRoaXMuc3RhdHVzQmFyLHtcbiAgICAgICAgICAgIHRhZzogJ2RpdicsXG4gICAgICAgICAgICBodG1sOiAnPGRpdiBjbGFzcz1cInByb2dyZXNzXCI+PGkgY2xhc3M9XCJpY29uIGljb24tc3Bpbm5lciBpY29uLXNwaW5cIj48L2k+IDxzcGFuPicgKyBfKCdtYXJrZG93bmVkaXRvci51cGxvYWRpbmdfJyArIHR5cGUpICsgZmlsZU5hbWUgKyAnPC9zcGFuPjwvZGl2PidcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIEV4dC5nZXQodXBsb2FkZXIpO1xuICAgIH1cblxuICAgICxmYWlsVXBsb2FkZXI6IGZ1bmN0aW9uKHVwbG9hZGVyLCBtZXNzYWdlKSB7XG4gICAgICAgIHVwbG9hZGVyLmNoaWxkKCcucHJvZ3Jlc3MnKS5hZGRDbGFzcygnZXJyb3InKTtcbiAgICAgICAgdXBsb2FkZXIuY2hpbGQoJy5wcm9ncmVzcycpLnNldFdpZHRoKCcxMDAlJyk7XG5cbiAgICAgICAgdXBsb2FkZXIuY2hpbGQoJ2knKS5hZGRDbGFzcygncmVtb3ZlLW1lc3NhZ2UnKTtcbiAgICAgICAgdXBsb2FkZXIuY2hpbGQoJ2knKS5yZXBsYWNlQ2xhc3MoJ2ljb24tc3Bpbm5lcicsICdpY29uLXJlbW92ZScpO1xuICAgICAgICB1cGxvYWRlci5jaGlsZCgnaScpLnJlbW92ZUNsYXNzKCdpY29uLXNwaW4nKTtcblxuICAgICAgICB1cGxvYWRlci5jaGlsZCgnc3BhbicpLmRvbS5pbm5lckhUTUwgKz0gJyBmYWlsZWQuICcgKyBtZXNzYWdlO1xuICAgICAgICB1cGxvYWRlci5jaGlsZCgnLnJlbW92ZS1tZXNzYWdlJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB1cGxvYWRlci5yZW1vdmUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLGZhaWxNZXNzYWdlOiBmdW5jdGlvbihmaWxlLCB0eXBlLCBtZXNzYWdlKSB7XG4gICAgICAgIHZhciB1cGxvYWRlciA9IHRoaXMuY3JlYXRlVXBsb2FkZXIodHlwZSwgZmlsZS5uYW1lKTtcbiAgICAgICAgdGhpcy5mYWlsVXBsb2FkZXIodXBsb2FkZXIsIG1lc3NhZ2UpO1xuICAgIH1cblxuICAgICxpc01vYmlsZURldmljZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAodHlwZW9mIHdpbmRvdy5vcmllbnRhdGlvbiAhPT0gXCJ1bmRlZmluZWRcIikgfHwgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignSUVNb2JpbGUnKSAhPT0gLTEpO1xuICAgIH1cbn0pO1xuXG5NT0R4LmxvYWRSVEUgPSBmdW5jdGlvbihpZCkge1xuICAgIG5ldyBtYXJrZG93bkVkaXRvci5FZGl0b3IoKTtcbn07XG4iLCJtYXJrZG93bkVkaXRvci53aW5kb3cuQ3JvcHBlciA9IGZ1bmN0aW9uKGNvbmZpZykge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICBjb25maWcuY3JvcHBlclNlbGVjdG9yID0gY29uZmlnLmNyb3BwZXJTZWxlY3RvciB8fCAnLmltYWdlLXVwbG9hZC13cmFwcGVyID4gaW1nJztcblxuICAgIEV4dC5hcHBseUlmKGNvbmZpZyx7XG4gICAgICAgIG1vZGFsOiBmYWxzZVxuICAgICAgICAsbGF5b3V0OiAnYXV0bydcbiAgICAgICAgLGNsb3NlQWN0aW9uOiAnaGlkZSdcbiAgICAgICAgLHNoYWRvdzogdHJ1ZVxuICAgICAgICAscmVzaXphYmxlOiB0cnVlXG4gICAgICAgICxjb2xsYXBzaWJsZTogdHJ1ZVxuICAgICAgICAsbWF4aW1pemFibGU6IGZhbHNlXG4gICAgICAgICxhdXRvSGVpZ2h0OiBmYWxzZVxuICAgICAgICAsYXV0b1Njcm9sbDogdHJ1ZVxuICAgICAgICAsYWxsb3dEcm9wOiB0cnVlXG4gICAgICAgICx3aWR0aDogODAwXG4gICAgICAgICxtb2JpbGU6IDBcbiAgICAgICAgLHRpdGxlOiBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLmNyb3BfaW1hZ2UnKVxuICAgICAgICAsY2xzOiAnbW9keC13aW5kb3cnXG4gICAgICAgICxodG1sOiAnPGRpdiBjbGFzcz1cImltYWdlLXVwbG9hZC13cmFwcGVyXCI+PGltZyBzcmM9XCInICsgVVJMLmNyZWF0ZU9iamVjdFVSTChjb25maWcuZmlsZSkgKyAnXCI+PC9kaXY+J1xuICAgICAgICAsdGJhcjogW3tcbiAgICAgICAgICAgIHRleHQ6ICc8aSBjbGFzcz1cImljb24gaWNvbi1hcnJvd3NcIj48L2k+ICcgKyBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLm1vdmUnKVxuICAgICAgICAgICAgLHNjb3BlOiB0aGlzXG4gICAgICAgICAgICAscGFyYW06ICdtb3ZlJ1xuICAgICAgICAgICAgLGFjdGlvbjogJ3NldERyYWdNb2RlJ1xuICAgICAgICAgICAgLGhhbmRsZXI6IHRoaXMuY2FsbENyb3BwZXJBY3Rpb25cbiAgICAgICAgfSx7XG4gICAgICAgICAgICB0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGljb24tY3JvcFwiPjwvaT4gJyArIF8oJ21hcmtkb3duZWRpdG9yLmNyb3BwZXIuY3JvcCcpXG4gICAgICAgICAgICAsc2NvcGU6IHRoaXNcbiAgICAgICAgICAgICxwYXJhbTogJ2Nyb3AnXG4gICAgICAgICAgICAsYWN0aW9uOiAnc2V0RHJhZ01vZGUnXG4gICAgICAgICAgICAsaGFuZGxlcjogdGhpcy5jYWxsQ3JvcHBlckFjdGlvblxuICAgICAgICB9LHtcbiAgICAgICAgICAgIHRleHQ6ICc8aSBjbGFzcz1cImljb24gaWNvbi1zZWFyY2gtcGx1c1wiPjwvaT4gJyArIF8oJ21hcmtkb3duZWRpdG9yLmNyb3BwZXIuem9vbV9pbicpXG4gICAgICAgICAgICAsc2NvcGU6IHRoaXNcbiAgICAgICAgICAgICxwYXJhbTogMC4xXG4gICAgICAgICAgICAsYWN0aW9uOiAnem9vbSdcbiAgICAgICAgICAgICxoYW5kbGVyOiB0aGlzLmNhbGxDcm9wcGVyQWN0aW9uXG4gICAgICAgIH0se1xuICAgICAgICAgICAgdGV4dDogJzxpIGNsYXNzPVwiaWNvbiBpY29uLXNlYXJjaC1taW51c1wiPjwvaT4gJyArIF8oJ21hcmtkb3duZWRpdG9yLmNyb3BwZXIuem9vbV9vdXQnKVxuICAgICAgICAgICAgLHNjb3BlOiB0aGlzXG4gICAgICAgICAgICAscGFyYW06IC0wLjFcbiAgICAgICAgICAgICxhY3Rpb246ICd6b29tJ1xuICAgICAgICAgICAgLGhhbmRsZXI6IHRoaXMuY2FsbENyb3BwZXJBY3Rpb25cbiAgICAgICAgfSx7XG4gICAgICAgICAgICB0ZXh0OiAnPGkgY2xhc3M9XCJpY29uIGljb24tcm90YXRlLWxlZnRcIj48L2k+ICcgKyBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLnJvdGF0ZV9sZWZ0JylcbiAgICAgICAgICAgICxzY29wZTogdGhpc1xuICAgICAgICAgICAgLHBhcmFtOiAtOTBcbiAgICAgICAgICAgICxhY3Rpb246ICdyb3RhdGUnXG4gICAgICAgICAgICAsaGFuZGxlcjogdGhpcy5jYWxsQ3JvcHBlckFjdGlvblxuICAgICAgICB9LHtcbiAgICAgICAgICAgIHRleHQ6ICc8aSBjbGFzcz1cImljb24gaWNvbi1yb3RhdGUtcmlnaHRcIj48L2k+ICcgKyBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLnJvdGF0ZV9yaWdodCcpXG4gICAgICAgICAgICAsc2NvcGU6IHRoaXNcbiAgICAgICAgICAgICxwYXJhbTogOTBcbiAgICAgICAgICAgICxhY3Rpb246ICdyb3RhdGUnXG4gICAgICAgICAgICAsaGFuZGxlcjogdGhpcy5jYWxsQ3JvcHBlckFjdGlvblxuICAgICAgICB9LHtcbiAgICAgICAgICAgIHRleHQ6ICc8aSBjbGFzcz1cImljb24gaWNvbi1yZW1vdmVcIj48L2k+ICcgKyBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLmNsZWFyX2Nyb3BwZXInKVxuICAgICAgICAgICAgLHNjb3BlOiB0aGlzXG4gICAgICAgICAgICAscGFyYW06IG51bGxcbiAgICAgICAgICAgICxhY3Rpb246ICdjbGVhcidcbiAgICAgICAgICAgICxoYW5kbGVyOiB0aGlzLmNhbGxDcm9wcGVyQWN0aW9uXG4gICAgICAgIH1dXG4gICAgICAgICxidXR0b25zOiBbe1xuICAgICAgICAgICAgdGV4dDogXygnY2FuY2VsJylcbiAgICAgICAgICAgICxzY29wZTogdGhpc1xuICAgICAgICAgICAgLGhhbmRsZXI6IHRoaXMuY2xvc2VcbiAgICAgICAgfSx7XG4gICAgICAgICAgICB0ZXh0OiBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLnVwbG9hZCcpXG4gICAgICAgICAgICAsY2xzOiAncHJpbWFyeS1idXR0b24nXG4gICAgICAgICAgICAsc2NvcGU6IHRoaXNcbiAgICAgICAgICAgICxjcm9wOiAwXG4gICAgICAgICAgICAsaGFuZGxlcjogdGhpcy51cGxvYWRcbiAgICAgICAgfSx7XG4gICAgICAgICAgICB0ZXh0OiBfKCdtYXJrZG93bmVkaXRvci5jcm9wcGVyLmNyb3BfdXBsb2FkJylcbiAgICAgICAgICAgICxjbHM6ICdwcmltYXJ5LWJ1dHRvbidcbiAgICAgICAgICAgICxzY29wZTogdGhpc1xuICAgICAgICAgICAgLGNyb3A6IDFcbiAgICAgICAgICAgICxoYW5kbGVyOiB0aGlzLnVwbG9hZFxuICAgICAgICB9XVxuICAgICAgICAsbGlzdGVuZXJzOiB7XG4gICAgICAgICAgICAnc2hvdyc6IHtcbiAgICAgICAgICAgICAgICBmbjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjcm9wcGVyT3B0aW9ucyA9IHt9O1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiRjcm9wcGVyRWwgPSAkKCcjJyArIHRoaXMuaWQgKyAnICcgKyBjb25maWcuY3JvcHBlclNlbGVjdG9yKTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgcmF0aW8gPSBNT0R4LmNvbmZpZ1snbWFya2Rvd25lZGl0b3IuY3JvcHBlci5hc3BlY3RfcmF0aW8nXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJhdGlvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByYXRpby5yZXBsYWNlKC9bXi06eCgpXFxkLyorLl0vZywgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmF0aW8gPSBldmFsKHJhdGlvKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY3JvcHBlck9wdGlvbnMuYXNwZWN0UmF0aW8gPSByYXRpbztcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGNyb3BwZXJPcHRpb25zLmNyb3AgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWFnZURhdGEgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3tcInhcIjonICsgZGF0YS54LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcInlcIjonICsgZGF0YS55LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcImhlaWdodFwiOicgKyBkYXRhLmhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnXCJ3aWR0aFwiOicgKyBkYXRhLndpZHRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdcInJvdGF0ZVwiOicgKyBkYXRhLnJvdGF0ZSArICd9J1xuICAgICAgICAgICAgICAgICAgICAgICAgXS5qb2luKCk7XG4gICAgICAgICAgICAgICAgICAgIH0uYmluZCh0aGlzKTtcblxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRjcm9wcGVyRWwuY3JvcHBlcihjcm9wcGVyT3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzY29wZTogdGhpc1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgbWFya2Rvd25FZGl0b3Iud2luZG93LkNyb3BwZXIuc3VwZXJjbGFzcy5jb25zdHJ1Y3Rvci5jYWxsKHRoaXMsY29uZmlnKTtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcblxufTtcbkV4dC5leHRlbmQobWFya2Rvd25FZGl0b3Iud2luZG93LkNyb3BwZXIsIEV4dC5XaW5kb3cse1xuICAgIGltYWdlRGF0YTogJydcbiAgICAsdXBsb2FkOiBmdW5jdGlvbihidXR0b24pIHtcbiAgICAgICAgdmFyIHVwbG9hZGVyID0gdGhpcy5jb25maWcubWQuY3JlYXRlVXBsb2FkZXIoJ2ltYWdlJywgdGhpcy5jb25maWcuZmlsZS5uYW1lKTtcblxuICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgdGhpcy5jb25maWcuZmlsZSk7XG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnYWN0aW9uJywgJ21nci9lZGl0b3IvaW1hZ2V1cGxvYWQnKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdpbWFnZURhdGEnLCB0aGlzLmltYWdlRGF0YSk7XG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnbmFtZScsIHRoaXMuY29uZmlnLmZpbGUubmFtZSk7XG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnY3JvcCcsIGJ1dHRvbi5jcm9wKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdyZXNvdXJjZScsIHRoaXMuY29uZmlnLm1kLmNvbmZpZy5yZXNvdXJjZSk7XG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnbW9iaWxlJywgdGhpcy5jb25maWcubW9iaWxlKTtcblxuICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIHhoci5vcGVuKCdQT1NUJywgbWFya2Rvd25FZGl0b3IuY29uZmlnLmNvbm5lY3RvclVybCk7XG4gICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCdQb3dlcmVkLUJ5JywgJ01PRHgnKTtcbiAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ21vZEF1dGgnLCBFeHQuQWpheC5kZWZhdWx0SGVhZGVycy5tb2RBdXRoKTtcblxuICAgICAgICB4aHIudXBsb2FkLm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIGlmIChldmVudC5sZW5ndGhDb21wdXRhYmxlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNvbXBsZXRlID0gKGV2ZW50LmxvYWRlZCAvIGV2ZW50LnRvdGFsICogMTAwIHwgMCk7XG4gICAgICAgICAgICAgICAgdXBsb2FkZXIuY2hpbGQoJy5wcm9ncmVzcycpLnNldFdpZHRoKGNvbXBsZXRlICsgJyUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHRoaXMpO1xuXG4gICAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlcyA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XG5cbiAgICAgICAgICAgICAgICBpZiAocmVzLnN1Y2Nlc3MgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICB1cGxvYWRlci5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maWcubWQuZWRpdG9yLmluc2VydCgnIVsnICsgcmVzLm9iamVjdC5uYW1lICsgJ10oJyArIHJlcy5vYmplY3QucGF0aCArICcgXCInICsgcmVzLm9iamVjdC5uYW1lICsgJ1wiKVxcblxcbicpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnLm1kLmZhaWxVcGxvYWRlcih1cGxvYWRlciwgcmVzLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHRoaXMpO1xuXG4gICAgICAgIHhoci5zZW5kKGZvcm1EYXRhKTtcblxuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgLGNhbGxDcm9wcGVyQWN0aW9uOiBmdW5jdGlvbihidG4pIHtcbiAgICAgICAgdGhpcy4kY3JvcHBlckVsLmNyb3BwZXIoYnRuLmFjdGlvbiwgYnRuLnBhcmFtKTtcbiAgICB9XG5cbiAgICAsY2xvc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLiRjcm9wcGVyRWwuY3JvcHBlcihcImRlc3Ryb3lcIik7XG5cbiAgICAgICAgbWFya2Rvd25FZGl0b3Iud2luZG93LkNyb3BwZXIuc3VwZXJjbGFzcy5jbG9zZS5jYWxsKHRoaXMpO1xuICAgICAgICB0aGlzLmNvbmZpZy5tZC5lZGl0b3IuZm9jdXMoKTtcbiAgICB9XG59KTtcbkV4dC5yZWcoJ21hcmtkb3duZWRpdG9yLXdpbmRvdy1jcm9wcGVyJyxtYXJrZG93bkVkaXRvci53aW5kb3cuQ3JvcHBlcik7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=