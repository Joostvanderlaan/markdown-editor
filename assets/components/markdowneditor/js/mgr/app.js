Ext.ns("MarkdownEditor"),MarkdownEditor=function(e){e=e||{},MarkdownEditor.superclass.constructor.call(this,e)},Ext.extend(MarkdownEditor,Ext.Component,{window:{},combo:{},config:{}}),Ext.reg("markdowneditor",MarkdownEditor),markdownEditor=new MarkdownEditor,markdownEditor.loadedElements={},markdownEditor.Editor=function(e){e=e||{},e.resource=MODx.request.id||0,markdownEditor.Editor.superclass.constructor.call(this,e),this.config=e},Ext.extend(markdownEditor.Editor,Ext.Component,{remarkable:"",fullScreen:!1,initComponent:function(){MarkdownEditor.superclass.initComponent.call(this),this.mdElementId&&Ext.onReady(this.render,this)},destroy:function(){this.editor.destroy(),this.mdContainer.remove(),this.taMarkdown.remove(),this.textarea.dom.style.display=null,this.textarea.dom.style.width=null,this.textarea.dom.style.height=null,MarkdownEditor.superclass.destroy.call(this)},render:function(){if(this.textarea=Ext.get(this.mdElementId),this.mdElementName=this.textarea.dom.name,this.textarea){this.buildUI(),this.registerAce(),this.registerMarked(),this.buildToolbox();var e=this.toolBox.child(".preview-button"),t=this.toolBox.child(".fullscreen-button"),i=this.toolBox.child(".splitscreen-button"),o=this.contentMD,r=Ext.get(Ext.DomHelper.append(o.parent(),{tag:"div","class":"preview-button-off",html:'<i class="icon icon-eye-slash icon-large"></i>',hidden:!0})),a=MODx.load({xtype:"modx-treedrop",target:o,targetEl:o,onInsert:function(e){return this.insert(e),this.focus(),!0}.bind(this.editor),iframe:!0});this.textarea.on("destroy",function(){a.destroy()});var n=parseInt(MODx.config["markdowneditor.general.split"]||0);1==n&&i.turnOn(),e.addListener("click",function(){this.showPreview(),this.hideContent(),this.statusBar.setDisplayed("none"),this.contentMD.parent().parent().addClass("preview"),r.show()},this),r.addListener("click",function(){this.hidePreview(),this.showContent(),this.statusBar.setDisplayed("block"),this.contentMD.parent().parent().removeClass("preview"),this.editor.focus(),r.hide()},this),i.addListener("click",function(){i.child("i").hasClass("icon-pause")?i.turnOn():i.turnOff()},this),t.addListener("click",function(){0==this.fullScreen?t.turnOn():t.turnOff(),this.statusBar.setDisplayed("block"),this.editor.resize(!0)},this),markdownEditor.content[this.mdElementName]&&this.editor.setValue(markdownEditor.content[this.mdElementName]),this.editor.selection.clearSelection(),this.preview.update(this.parse(this.editor.getValue())),this.preview.fixHeight(),window.editor=this.editor,this.editor.getSession().on("change",function(e){if("insertText"==e.data.action&&this.editor.getSession().getDocument().isNewLine(e.data.text)){var t=this.editor.getSession(),i=t.getDocument();null!=/^\s*(?:[*+-]|\d+\.)\s*$/.exec(i.getLine(e.data.range.start.row))&&(i.removeLines(e.data.range.start.row,e.data.range.start.row),this.editor.insert(i.getNewLineCharacter()))}this.parse(this.editor.getValue())}.bind(this))}},showContent:function(){this.contentMD.setDisplayed("block")},hideContent:function(){this.contentMD.setDisplayed("none")},showPreview:function(){this.preview.setDisplayed("block")},hidePreview:function(){this.preview.setDisplayed("none")},buildUI:function(){this.textarea.setDisplayed("none"),this.textarea.setWidth(0),this.textarea.setHeight(0),this.taMarkdown=Ext.get(Ext.DomHelper.insertBefore(this.textarea,{tag:"textarea",name:this.mdElementName+"_markdown","class":this.mdElementName+"_markdown"})),this.taMarkdown.setDisplayed("none"),this.taMarkdown.setWidth(0),this.taMarkdown.setHeight(0),this.mdContainer=Ext.get(Ext.DomHelper.insertBefore(this.textarea,{tag:"div","class":"markdown-container ace-"+(MODx.config["markdowneditor.general.theme"]||"monokai").toLowerCase()}));var e=Ext.get(Ext.DomHelper.append(this.mdContainer.dom,{tag:"div","class":"fullscreen-header ace_gutter",html:'<input type="text" />'})),t=Ext.getCmp("modx-resource-pagetitle");if(t){var i=e.child("input");i.dom.value=t.getValue(),i.on("change",function(){t.setValue(this.dom.value)}),t.on("change",function(e,t){i.dom.value=t})}var o=Ext.get(Ext.DomHelper.append(this.mdContainer.dom,{tag:"div","class":"markdown-wrapper"}));this.contentMD=Ext.get(Ext.DomHelper.append(o,{tag:"div","class":this.textarea.dom.className+" content-md "+this.mdElementName+"_markdown"})),this.preview=Ext.get(Ext.DomHelper.append(o,{tag:"div","class":"markdown-body preview-md"}));var r=this;this.preview.fixHeight=function(){var e=r.editor.getSession().getScreenLength()*r.editor.renderer.lineHeight+r.editor.renderer.scrollBar.getWidth()+30;this.setHeight(e)},1==MODx.config["markdowneditor.upload.enable_image_upload"]||1==MODx.config["markdowneditor.upload.enable_file_upload"]?(this.statusBar=Ext.get(Ext.DomHelper.append(this.mdContainer.dom,{tag:"div","class":"status-bar ace_gutter"})),this.isMobileDevice()?(this.statusBar.dom.innerHTML='<div class="upload-bar"> <input class="hidden" name="md_file_'+this.statusBar.id+'" id="'+this.statusBar.id+'-file" type="file" multiple /><input class="hidden" name="md_file_'+this.statusBar.id+'-mobile" id="'+this.statusBar.id+'-file-mobile" type="file" accept="image/*" capture="camera" />'+_("markdowneditor.status_bar_message_mobile",{id:this.statusBar.id+"-file",id_mobile:this.statusBar.id+"-file-mobile"})+"</div>",this.statusBar.child("#"+this.statusBar.id+"-file-mobile").on("change",function(e,t){this.handleFiles(t.files,1),t.value=""},this)):(this.statusBar.dom.innerHTML='<div class="upload-bar"> <input class="hidden" name="md_file_'+this.statusBar.id+'" id="'+this.statusBar.id+'-file" type="file" multiple>'+_("markdowneditor.status_bar_message",{id:this.statusBar.id+"-file"})+"</div>",this.statusBar.child("#"+this.statusBar.id+"-file").on("change",function(e,t){this.handleFiles(t.files),t.value=""},this))):this.statusBar=Ext.get(Ext.DomHelper.append(this.mdContainer.dom,{tag:"div","class":"status-bar",html:_("markdowneditor.status_bar_disabled")})),Ext.DomHelper.append(this.mdContainer.dom,{tag:"span",style:"clear: both"})},buildToolbox:function(){this.toolBox=Ext.get(Ext.DomHelper.append(this.statusBar,{tag:"div","class":"toolbox",cn:[{tag:"div","class":"preview-button",html:'<i class="icon icon-eye icon-large"></i>'},{tag:"div","class":"splitscreen-button",html:'<i class="icon icon-pause icon-large"></i>'},{tag:"div","class":"fullscreen-button",html:'<i class="icon icon-expand icon-large"></i>'}]}));var e=this;this.toolBox.child(".splitscreen-button").turnOn=function(){this.child("i").removeClass("icon-pause"),this.child("i").addClass("icon-stop"),e.contentMD.parent().parent().addClass("split")},this.toolBox.child(".splitscreen-button").turnOff=function(){this.child("i").addClass("icon-pause"),this.child("i").removeClass("icon-stop"),e.contentMD.parent().parent().removeClass("split")},this.toolBox.child(".fullscreen-button").turnOn=function(){this.child("i").removeClass("icon-expand"),this.child("i").addClass("icon-compress");var t=Ext.get("modx-action-buttons");t&&t.addClass("markdowneditor-fullscreen"),e.fullScreen=!0,1==parseInt(MODx.config["markdowneditor.general.split_fullscreen"]||1)?e.toolBox.child(".splitscreen-button").turnOn():e.toolBox.child(".splitscreen-button").turnOff(),e.showPreview(),e.showContent(),e.editor.focus(),e.contentMD.parent().parent().addClass("fullscreen"),e.editor.setOption("maxLines",null)},this.toolBox.child(".fullscreen-button").turnOff=function(){this.child("i").addClass("icon-expand"),this.child("i").removeClass("icon-compress");var t=Ext.get("modx-action-buttons");t&&t.removeClass("markdowneditor-fullscreen"),e.fullScreen=!1,1==parseInt(MODx.config["markdowneditor.general.split"]||0)?e.toolBox.child(".splitscreen-button").turnOn():e.toolBox.child(".splitscreen-button").turnOff(),e.hidePreview(),e.showContent(),e.editor.focus(),e.contentMD.parent().parent().removeClass("fullscreen"),e.editor.setOption("maxLines",1/0),e.preview.fixHeight()}},registerAce:function(){this.editor=ace.edit(Ext.DomQuery.selectNode("div."+this.mdElementName+"_markdown")),this.editor.setOptions({maxLines:1/0,minLines:25,enableBasicAutocompletion:!0,printMargin:!1,showGutter:!0,useSoftTabs:!0,showFoldWidgets:!1,showLineNumbers:!1,fontSize:parseInt(MODx.config["markdowneditor.general.font_size"])||12,fontFamily:MODx.config["markdowneditor.general.font_family"]||""}),this.editor.getSession().setUseWrapMode(!0),this.editor.getSession().setWrapLimitRange(),this.editor.renderer.setScrollMargin(10,10),this.editor.getSession().setValue(this.textarea.getValue()),this.editor.getSession().setMode("ace/mode/markdowneditor"),this.editor.setTheme("ace/theme/"+(MODx.config["markdowneditor.general.theme"]||"monokai")),this.editor.commands.addCommand({name:"Indent list",bindKey:{win:"Tab",mac:"Tab"},exec:function(e){var t=e.session.getLine(e.getCursorPosition().row),i=/^(\s*)(?:([-+*])|(\d+)\.)(\s+)/.exec(t);i?e.session.indentRows(e.getCursorPosition().row,e.getCursorPosition().row,"	"):e.indent()}}),this.editor.commands.addCommand({name:"Exit fullscreen",bindKey:{win:"Esc",mac:"Esc"},exec:function(){this.fullScreen&&this.toolBox.child(".fullscreen-button").turnOff()}.bind(this)});var e=ace.require("ace/ext/language_tools"),t={getCompletions:function(e,t,i,o,r){return 0===o.length?(r(null,[]),void 0):(MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/resource/getlist",prefix:o},listeners:{success:{fn:function(e){r(null,e.results)},scope:this}}}),void 0)}};e.addCompleter(t),this.editor.container.addEventListener("dragenter",this.catchAndDoNothing,!1),this.editor.container.addEventListener("dragover",this.catchAndDoNothing,!1),this.editor.container.addEventListener("drop",this.drop.bind(this),!1)},registerMarked:function(){this.remarkable=new Remarkable({html:!0,highlight:function(e,t){var i="";if(t&&hljs.getLanguage(t))try{return i=hljs.highlight(t,e).value,i=i.replace(/\[\[/g,"&#91;&#91;"),i=i.replace(/]]/g,"&#93;&#93;")}catch(o){}try{return i=hljs.highlightAuto(e).value,i=i.replace(/\[\[/g,"&#91;&#91;"),i=i.replace(/]]/g,"&#93;&#93;")}catch(o){}return""}}),this.remarkable.inline.ruler.disable(["backticks"])},parse:function(e){var t=this.remarkable.render(e);if(t=t.replace(/%5B/g,"["),t=t.replace(/%5D/g,"]"),1==MODx.config["markdowneditor.lp.parse_modx_tags"]){this.parseRequest&&clearTimeout(this.parseRequest);var i=parseInt(MODx.config["markdowneditor.lp.parse_modx_tags_timeout"]||300);this.parseRequest=setTimeout(function(){MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/editor/processcontent",content:t,resource:MODx.request.id},isUpload:!0,listeners:{success:{fn:function(e){this.preview.update(e.data),this.editor.getCursorPosition().row+2>=this.editor.getSession().getDocument().getLength()&&(this.preview.dom.scrollTop=this.preview.dom.scrollHeight),this.preview.fixHeight()},scope:this}}})}.bind(this),i)}else this.preview.update(t),this.editor.getCursorPosition().row+2>=this.editor.getSession().getDocument().getLength()&&(this.preview.dom.scrollTop=this.preview.dom.scrollHeight),this.preview.fixHeight();return this.taMarkdown.dom.value=this.editor.getValue(),this.textarea.dom.value=t,t},catchAndDoNothing:function(e){e.stopPropagation(),e.preventDefault()},drop:function(e){e.stopPropagation(),e.preventDefault(),(1==MODx.config["markdowneditor.upload.enable_image_upload"]||1==MODx.config["markdowneditor.upload.enable_file_upload"])&&this.handleFiles(e.dataTransfer.files)},handleFiles:function(e,t){t=t||0,Ext.each(e,function(e){var i=/^image\//.test(e.type);if(i){if(0==MODx.config["markdowneditor.upload.enable_image_upload"])return!0;if(!this.checkType(MODx.config["markdowneditor.upload.image_types"],e))return this.failMessage(e,"image",_("markdowneditor.err.upload.unsupported_image")),!0;if(!this.checkSize(e.size))return this.failMessage(e,"image",_("markdowneditor.err.upload.too_big")),!0;1==MODx.config["markdowneditor.cropper.enable_cropper"]?MODx.load({xtype:"markdowneditor-window-cropper",file:e,md:this,mobile:t}).show():(this.uploadFile(e,"image",t),this.editor.focus())}else{if(0==MODx.config["markdowneditor.upload.enable_file_upload"])return!0;if(!this.checkType(MODx.config["markdowneditor.upload.file_types"],e))return this.failMessage(e,"file",_("markdowneditor.err.upload.unsupported_file")),!0;if(!this.checkSize(e.size))return this.failMessage(e,"file",_("markdowneditor.err.upload.too_big")),!0;this.uploadFile(e,"file"),this.editor.focus()}},this)},checkSize:function(e){var t=MODx.config["markdowneditor.upload.max_size"];return t&&""!=t||(t=MODx.config.upload_maxsize||"2097152"),t=parseInt(t),0==t?!0:t>=e},checkType:function(e,t){return e=e.split(","),-1!=e.indexOf(t.name.split(".").pop())},uploadFile:function(e,t,i){t=t||"file",i=i||0;var o=this.createUploader(),r=new FormData;r.append("file",e),r.append("action","mgr/editor/"+t+"upload"),r.append("name",e.name),r.append("resource",this.config.resource),r.append("mobile",i);var a=new XMLHttpRequest;a.open("POST",markdownEditor.config.connectorUrl),a.setRequestHeader("Powered-By","MODx"),a.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),a.upload.onprogress=function(e){if(e.lengthComputable){var t=e.loaded/e.total*100|0;o.child(".progress").setWidth(t+"%")}}.bind(this),a.onload=function(){if(200===a.status){var e=JSON.parse(a.responseText);if(1==e.success){o.remove();var i="image"==t?"!":"",r="image"==t?"\n\n":"\n";this.editor.insert(i+"["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")'+r)}else this.failUploader(o,e.message)}}.bind(this),a.send(r)},createUploader:function(e,t){var i=Ext.DomHelper.insertFirst(this.statusBar,{tag:"div",html:'<div class="progress"><i class="icon icon-spinner icon-spin"></i> <span>'+_("markdowneditor.uploading_"+e)+t+"</span></div>"});return Ext.get(i)},failUploader:function(e,t){e.child(".progress").addClass("error"),e.child(".progress").setWidth("100%"),e.child("i").addClass("remove-message"),e.child("i").replaceClass("icon-spinner","icon-remove"),e.child("i").removeClass("icon-spin"),e.child("span").dom.innerHTML+=" failed. "+t,e.child(".remove-message").on("click",function(){e.remove()})},failMessage:function(e,t,i){var o=this.createUploader(t,e.name);this.failUploader(o,i)},isMobileDevice:function(){return"undefined"!=typeof window.orientation||-1!==navigator.userAgent.indexOf("IEMobile")}}),MODx.loadRTE=function(e){new markdownEditor.Editor({mdElementId:e})},MODx.afterTVLoad=function(){var e=Ext.query("textarea.modx-richtext");Ext.each(e,function(e){return(e=Ext.get(e))?markdownEditor.loadedElements[e.id]?!0:(markdownEditor.loadedElements[e.id]=new markdownEditor.Editor({mdElementId:e.id}),void 0):!0})},MODx.unloadTVRTE=function(){var e=Ext.query(".modx-richtext");Ext.each(e,function(e){return(e=Ext.get(e))?markdownEditor.loadedElements[e.id]?(markdownEditor.loadedElements[e.id].destroy(),void 0):!0:!0})},markdownEditor.combo.CropperProfile=function(e){var t=JSON.parse(MODx.config["markdowneditor.cropper.profiles"]||"[]");e=e||{},Ext.applyIf(e,{store:new Ext.data.JsonStore({data:t,fields:["name","width","height","ratio"]}),displayField:"name",mode:"local",valueField:"name",editable:!1,value:t[0]?t[0].name:""});var i=parseInt(MODx.config["markdowneditor.cropper.show_description"]||0);i&&(e.tpl=new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-weight: bold">{name}</span>','<br /><tpl if="width">W:{width} </tpl><tpl if="height">H:{height} </tpl><tpl if="ratio">R:{ratio}</tpl></div></tpl>')),markdownEditor.combo.CropperProfile.superclass.constructor.call(this,e)},Ext.extend(markdownEditor.combo.CropperProfile,MODx.combo.ComboBox),Ext.reg("markdowneditor-combo-cropper-profile",markdownEditor.combo.CropperProfile),markdownEditor.window.Cropper=function(e){e=e||{},e.cropperSelector=e.cropperSelector||".image-upload-wrapper > img";var t=Ext.id();Ext.applyIf(e,{modal:!1,layout:"auto",closeAction:"hide",shadow:!0,resizable:!0,collapsible:!0,maximizable:!1,autoHeight:!1,autoScroll:!0,allowDrop:!0,width:800,mobile:0,title:_("markdowneditor.cropper.crop_image"),cls:"modx-window markdowneditor-cropper-window",items:[{layout:"column",border:!1,defaults:{layout:"form",labelAlign:"top",labelSeparator:"",anchor:"100%",border:!1},items:[{columnWidth:.1,defaults:{msgTarget:"under",anchor:"100%"},cls:"markdowneditor-toolbar",items:[{xtype:"button",text:'<i class="icon icon-arrows icon-large"></i>',tooltip:_("markdowneditor.cropper.move"),scope:this,param:"move",action:"setDragMode",handler:this.callCropperAction},{xtype:"button",text:'<i class="icon icon-crop icon-large"></i>',tooltip:_("markdowneditor.cropper.crop"),scope:this,param:"crop",action:"setDragMode",handler:this.callCropperAction},{xtype:"button",text:'<i class="icon icon-search-plus icon-large"></i>',tooltip:_("markdowneditor.cropper.zoom_in"),scope:this,param:.1,action:"zoom",handler:this.callCropperAction},{xtype:"button",text:'<i class="icon icon-search-minus icon-large"></i>',tooltip:_("markdowneditor.cropper.zoom_out"),scope:this,param:-.1,action:"zoom",handler:this.callCropperAction},{xtype:"button",text:'<i class="icon icon-rotate-left icon-large"></i>',tooltip:_("markdowneditor.cropper.rotate_left"),scope:this,param:-90,action:"rotate",handler:this.callCropperAction},{xtype:"button",text:'<i class="icon icon-rotate-right icon-large"></i>',tooltip:_("markdowneditor.cropper.rotate_right"),scope:this,param:90,action:"rotate",handler:this.callCropperAction},{xtype:"button",text:'<i class="icon icon-remove icon-large"></i>',tooltip:_("markdowneditor.cropper.clear_cropper"),scope:this,param:null,action:"clear",handler:this.callCropperAction}]},{columnWidth:.9,defaults:{msgTarget:"under",anchor:"100%"},cls:"markdowneditor-cropper",items:[{html:'<div class="image-upload-wrapper"><img src="'+URL.createObjectURL(e.file)+'"></div>'}]}]}],bbar:[{xtype:"markdowneditor-combo-cropper-profile",id:t+"-cropper-profile",listeners:{select:{fn:function(e,t){this.changeCropperProfile(t.data)},scope:this}}},"->",{text:_("cancel"),scope:this,handler:this.close},{text:_("markdowneditor.cropper.upload"),cls:"primary-button",scope:this,crop:0,handler:this.upload},{text:_("markdowneditor.cropper.crop_upload"),cls:"primary-button",scope:this,crop:1,handler:this.upload}],listeners:{show:{fn:function(){var i={};this.$cropperEl=$("#"+this.id+" "+e.cropperSelector),i.crop=function(e){this.imageData=['{"x":'+e.x,'"y":'+e.y,'"height":'+e.height,'"width":'+e.width,'"rotate":'+e.rotate+"}"].join()}.bind(this),this.$cropperEl.cropper(i);var o=Ext.getCmp(t+"-cropper-profile").store.getAt(0);this.changeCropperProfile(o.data)},scope:this}}}),markdownEditor.window.Cropper.superclass.constructor.call(this,e),this.config=e},Ext.extend(markdownEditor.window.Cropper,Ext.Window,{imageData:"",cropperProfile:{name:""},changeCropperProfile:function(profile){var ratio;if(""!=profile.ratio)ratio=profile.ratio,ratio.replace(/[^-:x()\d/*+.]/g,""),ratio=eval(ratio)||0/0;else if(profile.width&&profile.height){var width=parseInt(profile.width),height=parseInt(profile.height);ratio=width>0&&height>0?width/height:0/0}else ratio=0/0;this.cropperProfile=profile,this.callCropperAction({action:"setAspectRatio",param:ratio})},upload:function(e){var t=this.config.md.createUploader("image",this.config.file.name),i=new FormData;i.append("file",this.config.file),i.append("action","mgr/editor/imageupload"),i.append("imageData",this.imageData),i.append("name",this.config.file.name),i.append("crop",e.crop),i.append("resource",this.config.md.config.resource),i.append("mobile",this.config.mobile),i.append("profile",this.cropperProfile.name);var o=new XMLHttpRequest;o.open("POST",markdownEditor.config.connectorUrl),o.setRequestHeader("Powered-By","MODx"),o.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),o.upload.onprogress=function(e){if(e.lengthComputable){var i=e.loaded/e.total*100|0;t.child(".progress").setWidth(i+"%")}}.bind(this),o.onload=function(){if(200===o.status){var e=JSON.parse(o.responseText);1==e.success?(t.remove(),this.config.md.editor.insert("!["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")\n\n')):this.config.md.failUploader(t,e.message)}}.bind(this),o.send(i),this.close()},callCropperAction:function(e){this.$cropperEl.cropper(e.action,e.param)},close:function(){this.$cropperEl.cropper("destroy"),markdownEditor.window.Cropper.superclass.close.call(this),this.config.md.editor.focus()}}),Ext.reg("markdowneditor-window-cropper",markdownEditor.window.Cropper);
//# sourceMappingURL=data:application/json;base64,