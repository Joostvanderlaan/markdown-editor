Ext.ns("MarkdownEditor"),MarkdownEditor=function(e){e=e||{},MarkdownEditor.superclass.constructor.call(this,e)},Ext.extend(MarkdownEditor,Ext.Component,{window:{},config:{}}),Ext.reg("markdowneditor",MarkdownEditor),markdownEditor=new MarkdownEditor,markdownEditor.Editor=function(e){e=e||{},e.resource=MODx.request.id||0,markdownEditor.Editor.superclass.constructor.call(this,e),this.config=e},Ext.extend(markdownEditor.Editor,Ext.Component,{remarkable:"",fullScreen:!1,initComponent:function(){MarkdownEditor.superclass.initComponent.call(this),Ext.onReady(this.render,this)},render:function(){this.textarea=Ext.get("ta"),this.buildUI(),this.registerAce(),this.registerMarked();var e=this.toolBox.child(".preview-button"),t=this.toolBox.child(".fullscreen-button"),i=this.contentMD,o=i.parent(),r=MODx.load({xtype:"modx-treedrop",target:i,targetEl:i,onInsert:function(e){return this.insert(e),this.focus(),!0}.bind(this.editor),iframe:!0});this.textarea.on("destroy",function(){r.destroy()}),e.addListener("click",function(){this.preview.isVisible()?(this.preview.setDisplayed("none"),i.setDisplayed("block"),this.statusBar.setDisplayed("block"),this.editor.focus(),e.child("i").removeClass("icon-toggle-on"),e.child("i").addClass("icon-toggle-off")):(this.preview.setDisplayed("block"),i.setDisplayed("none"),this.statusBar.setDisplayed("none"),e.child("i").removeClass("icon-toggle-off"),e.child("i").addClass("icon-toggle-on"))},this),t.addListener("click",function(){var r=t.child("i");0==this.fullScreen?(this.fullScreen=!0,r.removeClass("icon-expand"),r.addClass("icon-compress"),this.preview.setDisplayed("block"),i.setDisplayed("block"),this.editor.focus(),e.hide(),o.addClass("fullscreen"),this.editor.setOption("maxLines",null)):(this.fullScreen=!1,r.addClass("icon-expand"),r.removeClass("icon-compress"),this.preview.setDisplayed("none"),i.setDisplayed("block"),this.editor.focus(),e.show(),o.removeClass("fullscreen"),this.editor.setOption("maxLines",1/0)),this.statusBar.setDisplayed("block"),this.editor.resize(!0)},this),markdownEditor.content.content&&this.editor.setValue(markdownEditor.content.content),this.editor.selection.clearSelection(),this.preview.update(this.parse(this.editor.getValue())),this.editor.getSession().on("change",function(){this.parse(this.editor.getValue())}.bind(this))},buildUI:function(){this.textarea.setDisplayed("none"),this.textarea.setWidth(0),this.textarea.setHeight(0),this.taMarkdown=Ext.get(Ext.DomHelper.insertBefore(this.textarea,{tag:"textarea",name:"ta_markdown","class":"ta_markdown"})),this.taMarkdown.setDisplayed("none"),this.taMarkdown.setWidth(0),this.taMarkdown.setHeight(0);var e=Ext.DomHelper.insertBefore(this.textarea,{tag:"div","class":"markdown-container"});this.contentMD=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":this.textarea.dom.className+" content-md"})),this.preview=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"markdown-body preview-md"})),this.toolBox=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"toolbox",cn:[{tag:"span","class":"preview-button",html:'<i class="icon icon-toggle-off"></i> '+_("markdowneditor.toolbox.preview")},{tag:"span","class":"fullscreen-button",html:'<i class="icon icon-expand"></i>'}]})),1==MODx.config["markdowneditor.upload.enable_image_upload"]||1==MODx.config["markdowneditor.upload.enable_file_upload"]?(this.statusBar=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"status-bar"})),this.statusBar.dom.innerHTML='<div class="upload-bar"> <input class="hidden" name="file" id="'+this.statusBar.id+'-file" type="file" multiple>'+_("markdowneditor.status_bar_message",{id:this.statusBar.id+"-file"})+"</div>",this.statusBar.child("input").on("change",function(e,t){this.handleFiles(t.files),t.value=""},this)):this.statusBar=Ext.get(Ext.DomHelper.append(e,{tag:"div","class":"status-bar",html:_("markdowneditor.status_bar_disabled")})),Ext.DomHelper.append(e,{tag:"span",style:"clear: both"})},registerAce:function(){this.editor=ace.edit(Ext.DomQuery.selectNode("div.content-md")),this.editor.setOptions({maxLines:1/0,minLines:25,enableBasicAutocompletion:!0}),this.editor.renderer.setShowGutter(!0),this.editor.renderer.setScrollMargin(10,10),this.editor.getSession().setValue(this.textarea.getValue()),this.editor.getSession().setMode("ace/mode/markdown"),this.editor.setTheme("ace/theme/"+(MODx.config["markdowneditor.general.theme"]||"monokai"));var e=ace.require("ace/ext/language_tools"),t={getCompletions:function(e,t,i,o,r){return 0===o.length?(r(null,[]),void 0):(MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/resource/getlist",prefix:o},listeners:{success:{fn:function(e){r(null,e.results)},scope:this}}}),void 0)}};e.addCompleter(t),this.editor.container.addEventListener("dragenter",this.catchAndDoNothing,!1),this.editor.container.addEventListener("dragover",this.catchAndDoNothing,!1),this.editor.container.addEventListener("drop",this.drop.bind(this),!1)},registerMarked:function(){this.remarkable=new Remarkable({html:!0,highlight:function(e,t){if(t&&hljs.getLanguage(t))try{return hljs.highlight(t,e).value}catch(i){}try{return hljs.highlightAuto(e).value}catch(i){}return""}}),this.remarkable.inline.ruler.disable(["backticks"])},parse:function(e){var t=this.remarkable.render(e);t=t.replace(/%5B/g,"["),t=t.replace(/%5D/g,"]");var i=t.match(/<code(.|\s)*<\/code>/g);if(Ext.each(i,function(e){var i=e.replace(/\[\[/g,"&#91;&#91;");i=i.replace(/]]/g,"&#93;&#93;"),t=t.replace(e,i)}),1==MODx.config["markdowneditor.lp.parse_modx_tags"]){this.parseRequest&&clearTimeout(this.parseRequest);var o=parseInt(MODx.config["markdowneditor.lp.parse_modx_tags_timeout"]||300);this.parseRequest=setTimeout(function(){MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/editor/processcontent",content:t,resource:MODx.request.id},isUpload:!0,listeners:{success:{fn:function(e){this.preview.update(e.data),1==this.fullScreen&&this.editor.getCursorPosition().row+2>=this.editor.getSession().getScreenLength()&&(this.preview.dom.scrollTop=this.preview.dom.scrollHeight)},scope:this}}})}.bind(this),o)}else this.preview.update(t),1==this.fullScreen&&this.editor.getCursorPosition().row+2>=this.editor.getSession().getScreenLength()&&(this.preview.dom.scrollTop=this.preview.dom.scrollHeight);return this.taMarkdown.dom.value=this.editor.getValue(),this.textarea.dom.value=t,t},catchAndDoNothing:function(e){e.stopPropagation(),e.preventDefault()},drop:function(e){e.stopPropagation(),e.preventDefault(),(1==MODx.config["markdowneditor.upload.enable_image_upload"]||1==MODx.config["markdowneditor.upload.enable_file_upload"])&&this.handleFiles(e.dataTransfer.files)},handleFiles:function(e){Ext.each(e,function(e){var t=/^image\//.test(e.type);if(t){if(0==MODx.config["markdowneditor.upload.enable_image_upload"])return!0;if(!this.checkType(MODx.config["markdowneditor.upload.image_types"],e))return this.failMessage(e,"image",_("markdowneditor.err.upload.unsupported_image")),!0;if(e.size>parseInt(MODx.config["markdowneditor.upload.max_size"]))return this.failMessage(e,"image",_("markdowneditor.err.upload.too_big")),!0;1==MODx.config["markdowneditor.cropper.enable_cropper"]?MODx.load({xtype:"markdowneditor-window-cropper",file:e,md:this}).show():(this.uploadFile(e,"image"),this.editor.focus())}else{if(0==MODx.config["markdowneditor.upload.enable_file_upload"])return!0;if(!this.checkType(MODx.config["markdowneditor.upload.file_types"],e))return this.failMessage(e,"file",_("markdowneditor.err.upload.unsupported_file")),!0;if(e.size>parseInt(MODx.config["markdowneditor.upload.max_size"]))return this.failMessage(e,"file",_("markdowneditor.err.upload.too_big")),!0;this.uploadFile(e,"file"),this.editor.focus()}},this)},checkType:function(e,t){return e=e.split(","),-1!=e.indexOf(t.name.split(".").pop())},uploadFile:function(e,t){t||(t="file");var i=this.createUploader(),o=new FormData;o.append("file",e),o.append("action","mgr/editor/"+t+"upload"),o.append("name",e.name),o.append("resource",this.config.resource);var r=new XMLHttpRequest;r.open("POST",markdownEditor.config.connectorUrl),r.setRequestHeader("Powered-By","MODx"),r.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),r.upload.onprogress=function(e){if(e.lengthComputable){var t=e.loaded/e.total*100|0;i.child(".progress").setWidth(t+"%")}}.bind(this),r.onload=function(){if(200===r.status){var e=JSON.parse(r.responseText);if(1==e.success){i.remove();var o="image"==t?"!":"",a="image"==t?"\n\n":"\n";this.editor.insert(o+"["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")'+a)}else this.failUploader(i,e.message)}}.bind(this),r.send(o)},createUploader:function(e,t){var i=Ext.DomHelper.insertFirst(this.statusBar,{tag:"div",html:'<div class="progress"><i class="icon icon-spinner icon-spin"></i> <span>'+_("markdowneditor.uploading_"+e)+t+"</span></div>"});return Ext.get(i)},failUploader:function(e,t){e.child(".progress").addClass("error"),e.child(".progress").setWidth("100%"),e.child("i").addClass("remove-message"),e.child("i").replaceClass("icon-spinner","icon-remove"),e.child("i").removeClass("icon-spin"),e.child("span").dom.innerHTML+=" failed. "+t,e.child(".remove-message").on("click",function(){e.remove()})},failMessage:function(e,t,i){var o=this.createUploader(t,e.name);this.failUploader(o,i)}}),MODx.loadRTE=function(){new markdownEditor.Editor},markdownEditor.window.Cropper=function(config){config=config||{},config.cropperSelector=config.cropperSelector||".image-upload-wrapper > img",Ext.applyIf(config,{modal:!1,layout:"auto",closeAction:"hide",shadow:!0,resizable:!0,collapsible:!0,maximizable:!1,autoHeight:!1,autoScroll:!0,allowDrop:!0,width:800,title:_("markdowneditor.cropper.crop_image"),cls:"modx-window",html:'<div class="image-upload-wrapper"><img src="'+URL.createObjectURL(config.file)+'"></div>',tbar:[{text:'<i class="icon icon-arrows"></i> '+_("markdowneditor.cropper.move"),scope:this,param:"move",action:"setDragMode",handler:this.callCropperAction},{text:'<i class="icon icon-crop"></i> '+_("markdowneditor.cropper.crop"),scope:this,param:"crop",action:"setDragMode",handler:this.callCropperAction},{text:'<i class="icon icon-search-plus"></i> '+_("markdowneditor.cropper.zoom_in"),scope:this,param:.1,action:"zoom",handler:this.callCropperAction},{text:'<i class="icon icon-search-minus"></i> '+_("markdowneditor.cropper.zoom_out"),scope:this,param:-.1,action:"zoom",handler:this.callCropperAction},{text:'<i class="icon icon-rotate-left"></i> '+_("markdowneditor.cropper.rotate_left"),scope:this,param:-90,action:"rotate",handler:this.callCropperAction},{text:'<i class="icon icon-rotate-right"></i> '+_("markdowneditor.cropper.rotate_right"),scope:this,param:90,action:"rotate",handler:this.callCropperAction},{text:'<i class="icon icon-remove"></i> '+_("markdowneditor.cropper.clear_cropper"),scope:this,param:null,action:"clear",handler:this.callCropperAction}],buttons:[{text:_("cancel"),scope:this,handler:this.close},{text:_("markdowneditor.cropper.upload"),cls:"primary-button",scope:this,crop:0,handler:this.upload},{text:_("markdowneditor.cropper.crop_upload"),cls:"primary-button",scope:this,crop:1,handler:this.upload}],listeners:{show:{fn:function(){var cropperOptions={};this.$cropperEl=$("#"+this.id+" "+config.cropperSelector);var ratio=MODx.config["markdowneditor.cropper.aspect_ratio"];ratio&&(ratio.replace(/[^-:x()\d/*+.]/g,""),ratio=eval(ratio),cropperOptions.aspectRatio=ratio),cropperOptions.crop=function(e){this.imageData=['{"x":'+e.x,'"y":'+e.y,'"height":'+e.height,'"width":'+e.width,'"rotate":'+e.rotate+"}"].join()}.bind(this),this.$cropperEl.cropper(cropperOptions)},scope:this}}}),markdownEditor.window.Cropper.superclass.constructor.call(this,config),this.config=config},Ext.extend(markdownEditor.window.Cropper,Ext.Window,{imageData:"",upload:function(e){var t=this.config.md.createUploader("image",this.config.file.name),i=new FormData;i.append("file",this.config.file),i.append("action","mgr/editor/imageupload"),i.append("imageData",this.imageData),i.append("name",this.config.file.name),i.append("crop",e.crop),i.append("resource",this.config.md.config.resource);var o=new XMLHttpRequest;o.open("POST",markdownEditor.config.connectorUrl),o.setRequestHeader("Powered-By","MODx"),o.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),o.upload.onprogress=function(e){if(e.lengthComputable){var i=e.loaded/e.total*100|0;t.child(".progress").setWidth(i+"%")}}.bind(this),o.onload=function(){if(200===o.status){var e=JSON.parse(o.responseText);1==e.success?(t.remove(),this.config.md.editor.insert("!["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")\n\n')):this.config.md.failUploader(t,e.message)}}.bind(this),o.send(i),this.close()},callCropperAction:function(e){this.$cropperEl.cropper(e.action,e.param)},close:function(){this.$cropperEl.cropper("destroy"),markdownEditor.window.Cropper.superclass.close.call(this),this.config.md.editor.focus()}}),Ext.reg("markdowneditor-window-cropper",markdownEditor.window.Cropper);
//# sourceMappingURL=data:application/json;base64,