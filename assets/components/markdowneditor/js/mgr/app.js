Ext.ns("MarkdownEditor"),MarkdownEditor=function(e){e=e||{},MarkdownEditor.superclass.constructor.call(this,e)},Ext.extend(MarkdownEditor,Ext.Component,{window:{},config:{}}),Ext.reg("markdowneditor",MarkdownEditor),markdownEditor=new MarkdownEditor,markdownEditor.Editor=function(e){e=e||{},e.resource=MODx.request.id||0,markdownEditor.Editor.superclass.constructor.call(this,e),this.config=e},Ext.extend(markdownEditor.Editor,Ext.Component,{remarkable:"",initComponent:function(){MarkdownEditor.superclass.initComponent.call(this),Ext.onReady(this.render,this)},render:function(){this.textarea=Ext.get("ta"),this.buildUI(),this.registerAce(),this.registerMarked(),this.statusBar=Ext.get("status-bar"),this.preview=Ext.get("preview-md");var e=Ext.get("preview-button"),t=Ext.get("fullscreen-button"),i=Ext.get("content-md"),o=i.parent(),r=MODx.load({xtype:"modx-treedrop",target:i,targetEl:i,onInsert:function(e){return this.insert(e),this.focus(),!0}.bind(this.editor),iframe:!0});this.textarea.on("destroy",function(){r.destroy()}),e.addListener("click",function(){this.preview.isVisible()?(this.preview.setDisplayed("none"),i.setDisplayed("block"),this.statusBar.setDisplayed("block"),e.child("i").removeClass("icon-toggle-on"),e.child("i").addClass("icon-toggle-off")):(this.preview.setDisplayed("block"),i.setDisplayed("none"),this.statusBar.setDisplayed("none"),e.child("i").removeClass("icon-toggle-off"),e.child("i").addClass("icon-toggle-on"))},this),t.addListener("click",function(){var r=t.child("i");r.hasClass("icon-expand")?(r.removeClass("icon-expand"),r.addClass("icon-compress"),this.preview.setDisplayed("block"),i.setDisplayed("block"),e.hide(),o.addClass("fullscreen"),this.editor.setOption("maxLines",null)):(r.addClass("icon-expand"),r.removeClass("icon-compress"),this.preview.setDisplayed("none"),i.setDisplayed("block"),e.show(),o.removeClass("fullscreen"),this.editor.setOption("maxLines",1/0)),this.statusBar.setDisplayed("block"),this.editor.resize(!0)},this),markdownEditor.content.content&&this.editor.setValue(markdownEditor.content.content),this.editor.selection.clearSelection(),this.preview.update(this.parse(this.editor.getValue())),this.editor.getSession().on("change",function(){this.parse(this.editor.getValue())}.bind(this))},buildUI:function(){this.textarea.setDisplayed("none"),this.textarea.setWidth(0),this.textarea.setHeight(0),Ext.DomHelper.insertBefore(this.textarea,{tag:"textarea",name:"ta_markdown",id:"ta_markdown"}),this.taMarkdown=Ext.get("ta_markdown"),this.taMarkdown.setDisplayed("none"),this.taMarkdown.setWidth(0),this.taMarkdown.setHeight(0);var e=Ext.DomHelper.insertBefore(this.textarea,{tag:"div","class":"markdown-container"});Ext.DomHelper.append(e,{tag:"div",id:"content-md","class":this.textarea.dom.className}),Ext.DomHelper.append(e,{tag:"div",id:"preview-md","class":"markdown-body"}),Ext.DomHelper.append(e,{tag:"div",id:"toolbox",cn:[{tag:"span",id:"preview-button",html:'<i class="icon icon-toggle-off"></i> Preview'},{tag:"span",id:"fullscreen-button",html:'<i class="icon icon-expand"></i>'}]}),Ext.DomHelper.append(e,{tag:"div",id:"status-bar",html:'<input class="hidden" id="inputFile" name="file" type="file" multiple>Attach files by dragging & dropping or <label for="inputFile" class="link">selecting them</label>.'}),Ext.get("inputFile").on("change",function(e,t){this.handleFiles(t.files),t.value=""},this),Ext.DomHelper.append(e,{tag:"span",style:"clear: both"})},registerAce:function(){this.editor=ace.edit(Ext.DomQuery.selectNode("div#content-md")),this.editor.setOptions({maxLines:1/0,minLines:25,enableBasicAutocompletion:!0}),this.editor.renderer.setShowGutter(!0),this.editor.renderer.setScrollMargin(10,10),this.editor.getSession().setValue(this.textarea.getValue()),this.editor.getSession().setMode("ace/mode/markdown"),this.editor.setTheme("ace/theme/"+(MODx.config["markdowneditor.general.theme"]||"monokai"));var e=ace.require("ace/ext/language_tools"),t={getCompletions:function(e,t,i,o,r){return 0===o.length?(r(null,[]),void 0):(MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/resource/getlist",prefix:o},listeners:{success:{fn:function(e){r(null,e.results)},scope:this}}}),void 0)}};e.addCompleter(t),this.editor.container.addEventListener("dragenter",this.catchAndDoNothing,!1),this.editor.container.addEventListener("dragover",this.catchAndDoNothing,!1),this.editor.container.addEventListener("drop",this.drop.bind(this),!1)},registerMarked:function(){this.remarkable=new Remarkable({html:!0,highlight:function(e,t){if(t&&hljs.getLanguage(t))try{return hljs.highlight(t,e).value}catch(i){}try{return hljs.highlightAuto(e).value}catch(i){}return""}}),this.remarkable.inline.ruler.disable(["backticks"])},parse:function(e){var t=this.remarkable.render(e);if(t=t.replace(/%5B/g,"["),t=t.replace(/%5D/g,"]"),1==MODx.config["markdowneditor.lp.parse_modx_tags"]){this.parseRequest&&clearTimeout(this.parseRequest);var i=parseInt(MODx.config["markdowneditor.lp.parse_modx_tags_timeout"]||300);this.parseRequest=setTimeout(function(){MODx.Ajax.request({url:markdownEditor.config.connectorUrl,params:{action:"mgr/editor/processcontent",content:t,resource:MODx.request.id},isUpload:!0,listeners:{success:{fn:function(e){this.preview.update(e.data)},scope:this}}})},i)}else this.preview.update(t);return this.taMarkdown.dom.value=this.editor.getValue(),this.textarea.dom.value=t,t},catchAndDoNothing:function(e){e.stopPropagation(),e.preventDefault()},drop:function(e){e.stopPropagation(),e.preventDefault(),this.handleFiles(e.dataTransfer.files)},handleFiles:function(e){Ext.each(e,function(e){var t=/^image\//.test(e.type);t?1==MODx.config["markdowneditor.cropper.enable_cropper"]?MODx.load({xtype:"markdowneditor-window-cropper",file:e,md:this}).show():this.uploadFile(e,"image"):this.uploadFile(e,"file")},this)},uploadFile:function(e,t){t||(t="file");var i=Ext.DomHelper.insertFirst(this.statusBar,{tag:"div",id:"upload_progress",html:'<div class="progress"></div><i class="icon icon-spinner icon-spin"></i> Uploading '+t+": "+e.name}),o=new FormData;o.append("file",e),o.append("action","mgr/editor/"+t+"upload"),o.append("name",e.name),o.append("resource",this.config.resource);var r=new XMLHttpRequest;r.open("POST",markdownEditor.config.connectorUrl),r.setRequestHeader("Powered-By","MODx"),r.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),r.upload.onprogress=function(e){if(e.lengthComputable){var t=e.loaded/e.total*100|0;this.statusBar.child(".progress").setWidth(t+"%")}}.bind(this),r.onload=function(){if(200===r.status){var e=JSON.parse(r.responseText);if(1==e.success){i.remove();var o="image"==t?"!":"";this.editor.insert(o+"["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")\n')}}}.bind(this),r.send(o)}}),MODx.loadRTE=function(){new markdownEditor.Editor},markdownEditor.window.Cropper=function(config){config=config||{},config.cropperSelector=config.cropperSelector||".image-upload-wrapper > img",Ext.applyIf(config,{modal:!1,layout:"auto",closeAction:"hide",shadow:!0,resizable:!0,collapsible:!0,maximizable:!1,autoHeight:!1,autoScroll:!0,allowDrop:!0,width:800,title:"Crop the image",cls:"modx-window",html:'<div class="image-upload-wrapper"><img src="'+URL.createObjectURL(config.file)+'"></div>',tbar:[{text:'<i class="icon icon-arrows"></i> Move',scope:this,param:"move",action:"setDragMode",handler:this.callCropperAction},{text:'<i class="icon icon-crop"></i> Crop',scope:this,param:"crop",action:"setDragMode",handler:this.callCropperAction},{text:'<i class="icon icon-search-plus"></i> Zoom In',scope:this,param:.1,action:"zoom",handler:this.callCropperAction},{text:'<i class="icon icon-search-minus"></i> Zoom Out',scope:this,param:-.1,action:"zoom",handler:this.callCropperAction},{text:'<i class="icon icon-rotate-left"></i> Rotate left',scope:this,param:-90,action:"rotate",handler:this.callCropperAction},{text:'<i class="icon icon-rotate-right"></i> Rotate right',scope:this,param:90,action:"rotate",handler:this.callCropperAction},{text:'<i class="icon icon-remove"></i> Clear cropper',scope:this,param:null,action:"clear",handler:this.callCropperAction}],buttons:[{text:_("cancel"),scope:this,handler:this.close},{text:"Upload",cls:"primary-button",scope:this,crop:0,handler:this.upload},{text:"Crop & Upload",cls:"primary-button",scope:this,crop:1,handler:this.upload}],listeners:{show:{fn:function(){var cropperOptions={},ratio=MODx.config["markdowneditor.cropper.aspect_ratio"];ratio&&(ratio.replace(/[^-:x()\d/*+.]/g,""),ratio=eval(ratio),cropperOptions.aspectRatio=ratio),cropperOptions.crop=function(e){this.imageData=['{"x":'+e.x,'"y":'+e.y,'"height":'+e.height,'"width":'+e.width,'"rotate":'+e.rotate+"}"].join()}.bind(this),$(config.cropperSelector).cropper(cropperOptions)},scope:this}}}),markdownEditor.window.Cropper.superclass.constructor.call(this,config),this.config=config},Ext.extend(markdownEditor.window.Cropper,Ext.Window,{imageData:"",upload:function(e){var t=Ext.DomHelper.insertFirst(this.config.md.statusBar,{tag:"div",id:"upload_progress",html:'<div class="progress"></div><i class="icon icon-spinner icon-spin"></i> Uploading image: '+this.config.file.name}),i=new FormData;i.append("file",this.config.file),i.append("action","mgr/editor/imageupload"),i.append("imageData",this.imageData),i.append("name",this.config.file.name),i.append("crop",e.crop),i.append("resource",this.config.md.config.resource);var o=new XMLHttpRequest;o.open("POST",markdownEditor.config.connectorUrl),o.setRequestHeader("Powered-By","MODx"),o.setRequestHeader("modAuth",Ext.Ajax.defaultHeaders.modAuth),o.upload.onprogress=function(e){if(e.lengthComputable){var t=e.loaded/e.total*100|0;this.config.md.statusBar.child(".progress").setWidth(t+"%")}}.bind(this),o.onload=function(){if(200===o.status){var e=JSON.parse(o.responseText);1==e.success&&(t.remove(),this.config.md.editor.insert("!["+e.object.name+"]("+e.object.path+' "'+e.object.name+'")\n'))}}.bind(this),o.send(i),$(this.config.cropperSelector).cropper("destroy"),this.close()},callCropperAction:function(e){$(this.config.cropperSelector).cropper(e.action,e.param)}}),Ext.reg("markdowneditor-window-cropper",markdownEditor.window.Cropper);
//# sourceMappingURL=data:application/json;base64,