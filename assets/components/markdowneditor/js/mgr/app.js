var MarkdownEditor=function(e){e=e||{},MarkdownEditor.superclass.constructor.call(this,e)};Ext.override(MODx.panel.Resource,{}),Ext.extend(MarkdownEditor,Ext.Component,{window:{},remarkable:"",initComponent:function(){MarkdownEditor.superclass.initComponent.call(this),Ext.onReady(this.render,this)},parseRequest:"",parse:function(e){var t=this.remarkable.render(e);return t=t.replace(/%5B/g,"["),t=t.replace(/%5D/g,"]"),this.parseRequest&&clearTimeout(this.parseRequest),this.parseRequest=setTimeout(function(){MODx.Ajax.request({url:MarkdownEditor_config.connectorUrl,params:{action:"mgr/editor/processcontent",content:t,resource:MODx.request.id},isUpload:!0,listeners:{success:{fn:function(e){Ext.get("preview-md").update(e.data)},scope:this}}})},150),this.taMarkdown.dom.value=this.editor.getValue(),this.textarea.dom.value=t,t},buildUI:function(){this.textarea.setDisplayed("none"),this.textarea.setWidth(0),this.textarea.setHeight(0),Ext.DomHelper.insertBefore(this.textarea,{tag:"textarea",name:"ta_markdown",id:"ta_markdown"}),this.taMarkdown=Ext.get("ta_markdown"),this.taMarkdown.setDisplayed("none"),this.taMarkdown.setWidth(0),this.taMarkdown.setHeight(0);var e=Ext.DomHelper.insertBefore(this.textarea,{tag:"div","class":"markdown-container"});Ext.DomHelper.append(e,{tag:"div",id:"content-md","class":this.textarea.dom.className}),Ext.DomHelper.append(e,{tag:"div",id:"preview-md","class":"markdown-body"}),Ext.DomHelper.append(e,{tag:"div",id:"toolbox",cn:[{tag:"span",id:"preview-button",html:'<i class="icon icon-toggle-off"></i> Preview'},{tag:"span",id:"fullscreen-button",html:'<i class="icon icon-expand"></i>'}]}),Ext.DomHelper.append(e,{tag:"div",id:"status-bar",html:'<input class="hidden" id="inputFile" name="file" type="file" multiple>Attach images by dragging & dropping or <label for="inputFile" class="link">selecting them</label>.'}),Ext.get("inputFile").on("change",function(e,t){this.handleFiles(t.files)},this),Ext.DomHelper.append(e,{tag:"span",style:"clear: both"})},registerAce:function(){this.editor=ace.edit(Ext.DomQuery.selectNode("div#content-md")),this.editor.setOptions({maxLines:1/0,minLines:25,enableBasicAutocompletion:!0}),this.editor.renderer.setShowGutter(!0),this.editor.renderer.setScrollMargin(10,10),this.editor.getSession().setValue(this.textarea.getValue()),this.editor.getSession().setMode("ace/mode/markdown"),this.editor.setTheme("ace/theme/monokai");var e=ace.require("ace/ext/language_tools"),t={getCompletions:function(e,t,i,n,s){return 0===n.length?(s(null,[]),void 0):(MODx.Ajax.request({url:MarkdownEditor_config.connectorUrl,params:{action:"mgr/resource/getlist",prefix:n},listeners:{success:{fn:function(e){s(null,e.results)},scope:this}}}),void 0)}};e.addCompleter(t),this.editor.container.addEventListener("dragenter",this.catchAndDoNothing,!1),this.editor.container.addEventListener("dragover",this.catchAndDoNothing,!1),this.editor.container.addEventListener("drop",this.drop.bind(this),!1)},catchAndDoNothing:function(e){e.stopPropagation(),e.preventDefault()},drop:function(e){e.stopPropagation(),e.preventDefault(),this.handleFiles(e.dataTransfer.files)},handleFiles:function(e){Ext.each(e,function(e){var t=/^image\//.test(e.type);t?MODx.load({xtype:"markdowneditor-window-cropper",file:e,md:this}).show():console.log("not image")},this)},registerMarked:function(){this.remarkable=new Remarkable({html:!0,highlight:function(e,t){if(t&&hljs.getLanguage(t))try{return hljs.highlight(t,e).value}catch(i){}try{return hljs.highlightAuto(e).value}catch(i){}return""}}),this.remarkable.inline.ruler.disable(["backticks"])},render:function(){var e=this;this.textarea=Ext.get("ta"),this.buildUI(),this.registerAce(),this.registerMarked();var t=Ext.get("preview-button"),i=Ext.get("fullscreen-button"),n=Ext.get("preview-md"),s=Ext.get("content-md"),o=s.parent(),a=MODx.load({xtype:"modx-treedrop",target:s,targetEl:s,onInsert:function(e){return this.insert(e),this.focus(),!0}.bind(this.editor),iframe:!0});this.textarea.on("destroy",function(){a.destroy()}),t.addListener("click",function(){n.isVisible()?(n.setDisplayed("none"),s.setDisplayed("block"),t.child("i").removeClass("icon-toggle-on"),t.child("i").addClass("icon-toggle-off")):(n.setDisplayed("block"),s.setDisplayed("none"),t.child("i").removeClass("icon-toggle-off"),t.child("i").addClass("icon-toggle-on"))}),i.addListener("click",function(){var e=i.child("i");e.hasClass("icon-expand")?(e.removeClass("icon-expand"),e.addClass("icon-compress"),n.setDisplayed("block"),s.setDisplayed("block"),t.hide(),o.addClass("fullscreen"),this.editor.setOption("maxLines",null)):(e.addClass("icon-expand"),e.removeClass("icon-compress"),n.setDisplayed("none"),s.setDisplayed("block"),t.show(),o.removeClass("fullscreen"),this.editor.setOption("maxLines",1/0)),this.editor.resize(!0)},this),MarkdownEditor_content.content&&this.editor.setValue(MarkdownEditor_content.content),this.editor.selection.clearSelection(),n.update(this.parse(this.editor.getValue())),this.editor.getSession().on("change",function(){e.parse(e.editor.getValue())})}}),MarkdownEditor=new MarkdownEditor;
//# sourceMappingURL=data:application/json;base64,